{"version":3,"sources":["../node_modules/@material-ui/core/esm/Divider/Divider.js","layout/layouts/PanelLayout.tsx"],"names":["Divider","React","forwardRef","props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","createElement","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","fade","middle","spacing","marginRight","name","LazyEndpoints","lazy","LazyServerState","LazyStateInterface","PanelLayout","fallback","style"],"mappings":"4LAkDIA,EAAUC,IAAMC,YAAW,SAAiBC,EAAOC,GACrD,IAAIC,EAAkBF,EAAMG,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBC,EAAmBN,EAAMO,UACzBC,OAAiC,IAArBF,EAA8B,KAAOA,EACjDG,EAAeT,EAAMU,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAqBX,EAAMY,YAC3BA,OAAqC,IAAvBD,EAAgC,aAAeA,EAC7DE,EAAcb,EAAMc,KACpBA,OAAuB,IAAhBD,EAAuC,OAAdL,EAAqB,iBAAcO,EAAYF,EAC/EG,EAAiBhB,EAAMiB,QACvBA,OAA6B,IAAnBD,EAA4B,YAAcA,EACpDE,EAAQC,YAAyBnB,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,QAAS,cAAe,OAAQ,YAE9H,OAAOF,IAAMsB,cAAcZ,EAAWa,YAAS,CAC7ChB,UAAWiB,YAAKlB,EAAQmB,KAAMlB,EAAuB,cAAZY,GAA2Bb,EAAQa,GAAUd,GAAYC,EAAQD,SAAUO,GAASN,EAAQM,MAAO,CAC1Ic,SAAUpB,EAAQoB,UAClBZ,IACFE,KAAMA,EACNb,IAAKA,GACJiB,OA6CUO,eA/GK,SAAgBC,GAClC,MAAO,CAELH,KAAM,CACJI,OAAQ,EACRC,OAAQ,EAERC,OAAQ,OACRC,WAAY,EACZC,gBAAiBL,EAAMM,QAAQC,SAIjC9B,SAAU,CACR+B,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,QAITC,MAAO,CACLC,WAAY,IAId7B,MAAO,CACLqB,gBAAiBS,YAAKd,EAAMM,QAAQC,QAAS,MAI/CQ,OAAQ,CACNF,WAAYb,EAAMgB,QAAQ,GAC1BC,YAAajB,EAAMgB,QAAQ,IAI7BlB,SAAU,CACRG,OAAQ,OACRU,MAAO,MAwEqB,CAChCO,KAAM,cADOnB,CAEZ5B,GCxHH,wCAGA,IAAMgD,EAAgBC,gBAAK,kBAAM,8DAC3BC,EAAkBD,gBAAK,kBAC3B,uDAEIE,EAAqBF,gBAAK,kBAC9B,iCAGa,SAASG,IACtB,OACE,oCACE,kBAAC,WAAD,CAAUC,SAAS,2BACjB,kBAACH,EAAD,OAEF,kBAAC,EAAD,CAASI,MAAO,CAAEvB,OAAQ,KAC1B,kBAAC,WAAD,CAAUsB,SAAS,8BACjB,kBAACF,EAAD,OAEF,kBAAC,EAAD,CAASG,MAAO,CAAEvB,OAAQ,KAC1B,kBAAC,WAAD,CAAUsB,SAAS,wBACjB,kBAACL,EAAD","file":"static/js/13.2a421312.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, light && classes.light, {\n      vertical: classes.vertical\n    }[orientation]),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import { Divider } from '@material-ui/core';\nimport React, { lazy, Suspense } from 'react';\n\nconst LazyEndpoints = lazy(() => import('../../modules/endpoints/Endpoints'));\nconst LazyServerState = lazy(() =>\n  import('../../modules/server-state/ServerState'),\n);\nconst LazyStateInterface = lazy(() =>\n  import('../../modules/state-interface/StateInterface'),\n);\n\nexport default function PanelLayout() {\n  return (\n    <>\n      <Suspense fallback=\"Loading server state...\">\n        <LazyServerState />\n      </Suspense>\n      <Divider style={{ margin: 8 }} />\n      <Suspense fallback=\"Loading state interface...\">\n        <LazyStateInterface />\n      </Suspense>\n      <Divider style={{ margin: 8 }} />\n      <Suspense fallback=\"Loading endpoints...\">\n        <LazyEndpoints />\n      </Suspense>\n    </>\n  );\n}\n"],"sourceRoot":""}