{"version":3,"sources":["common/hooks/useLocalstorage.ts","layout/Layout.tsx","App.tsx","common/CodeEditor.tsx","common/Editor.tsx","modules/endpoints/test-endpoint/CopyCurl.tsx","modules/endpoints/test-endpoint/QueryParameters.tsx","modules/endpoints/test-endpoint/UrlParameters.tsx","modules/endpoints/test-endpoint/TestEndpoint.tsx"],"names":["useLocalstorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setLocalValue","useCallback","value","setItem","stringify","Header","lazy","BoardLayout","PanelLayout","TabsLayout","Layout","viewMode","useContext","AppStateContext","fallback","hostName","location","hostname","httpProtocol","socketsProtocol","socketUrl","initialServerState","initialEndpoint","createContext","activeTab","activeServerStateScenarioId","serverState","endpoints","serverStateInterface","serverStateScenarios","persistEndpoints","persistMockedData","changeViewMode","_viewMode","changeActiveTab","_tabKey","addServerStateScenario","_serverStateScenario","changeServerStateScenario","_serverStateScenarioId","updateServerState","_serverState","resetServerState","deleteStateScenario","addEndpoint","_endpoint","deleteEndpoint","_endpointId","changeEndpointResponseStatus","_status","updateEndpoint","testEndpoint","_urlParameters","_queryString","_requestBody","Promise","resolve","Response","socket","WebSocket","sendEvent","event","send","e","App","setActiveTab","setActiveServerStateScenarioId","setViewMode","setServerState","setServerStateScenarios","setServerStateInterface","setEndpoints","messageHandler","action","payload","updateEndpoints","updateServerStateInterface","updateActiveStateScenarioId","updateServerStateScenarios","useEffect","onopen","onclose","setTimeout","reload","onmessage","data","message","parseMessage","onerror","pingInterval","setInterval","clearInterval","contextValue","endpointId","status","serverStateScenario","scenarios","serverStateScenarioId","updatedServerState","state","endpoint","urlParameters","queryParams","requestBody","parseUrlWithParameters","a","async","url","path","split","filter","Boolean","reduce","acc","part","urlDelimiter","slice","method","parsedBody","isEmpty","Object","keys","length","body","undefined","headers","Accept","parsedUrl","fetch","credentials","className","Provider","CodeEditor","code","title","language","onSave","draft","setDraft","editing","setEditing","editorReady","setEditorReady","style","width","display","alignItems","variant","onClick","autoHeight","onReady","trim","Editor","editorRef","useRef","interval","current","useAutoSave","linesCount","height","editorDidMount","valueGetter","CopyCurl","queryString","open","setOpen","handleClose","reason","Button","navigator","clipboard","writeText","toLocaleUpperCase","origin","Snackbar","IconButton","aria-label","color","size","fontSize","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","QueryParameters","setQueryParams","Typography","parameters","map","index","id","name","type","marginTop","marginRight","TextField","label","placeholder","onChange","target","UrlParameters","setUrlParameters","urlParts","flexGrow","parameterName","required","useStyles","makeStyles","theme","createStyles","closeButton","position","right","spacing","top","palette","grey","TestEndpoint","setRequestBody","showRequestBody","setShowRequestBody","responseJson","setResponseJson","useTheme","classes","fullScreen","useMediaQuery","breakpoints","down","queryParam","initialQueryParamsValues","parseQueryParams","params","entries","Dialog","closeAfterTransition","aria-labelledby","maxWidth","DialogTitle","disableTypography","minWidth","Close","DialogContent","DialogActions","response","json"],"mappings":"yMAEe,SAASA,EAAmBC,EAAaC,GAAkB,IAAD,EAClCC,oBAAS,WAC5C,IACE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GAEzC,OAAOG,EAAOI,KAAKC,MAAML,GAAQF,EACjC,MAAOQ,GAGP,OAFAC,QAAQC,IAAIF,GAELR,MAT4D,mBAChEW,EADgE,KACnDC,EADmD,KAwBvE,MAAO,CAACD,EAZSE,uBACf,SAACC,GACC,IACEX,OAAOC,aAAaW,QAAQhB,EAAKO,KAAKU,UAAUF,IAChDF,EAAcE,GACd,MAAON,GACPC,QAAQD,MAAMA,MAGlB,CAACT,KCpBL,IAAMkB,EAASC,gBAAK,kBAAM,kCACpBC,EAAcD,gBAAK,kBAAM,kCACzBE,EAAcF,gBAAK,kBAAM,kCACzBG,EAAaH,gBAAK,kBAAM,wDAEf,SAASI,IAAU,IACxBC,EAAaC,qBAAWC,GAAxBF,SAER,OACE,oCACE,kBAAC,WAAD,CAAUG,SAAS,qBACjB,kBAACT,EAAD,OAEY,SAAbM,GACC,kBAAC,WAAD,CAAUG,SAAS,0BACjB,kBAACL,EAAD,OAGU,WAAbE,GACC,kBAAC,WAAD,CAAUG,SAAS,2BACjB,kBAACN,EAAD,OAGU,UAAbG,GACC,kBAAC,WAAD,CAAUG,SAAS,2BACjB,kBAACP,EAAD,Q,4DCXV,IAAMQ,EAEyB,cAA7BxB,OAAOyB,SAASC,SADhB,4CAIIC,EAEyB,cAA7B3B,OAAOyB,SAASC,SACZ,WAFJ,UAIIE,EAEyB,cAA7B5B,OAAOyB,SAASC,SACZ,SAFJ,QAKIG,EAAS,UAAMD,GAAN,OAAwBJ,EAAxB,YADI,gBAGnB,SAASM,IAEP,MAAO,GAGT,SAASC,IACP,MAAO,GAKF,IAAMT,EAAkBU,wBAAc,CAC3CC,UAAW,cACXC,4BAA6B,UAC7Bd,SAAU,OACVe,YAbO,GAcPC,UAVO,GAWPC,qBAAsB,GACtBC,qBAAsB,GAEtBC,iBAT2C,aAU3CC,kBAV2C,aAW3CC,eAX2C,SAW5BC,KACfC,gBAZ2C,SAY3BC,KAChBC,uBAb2C,SAapBC,KACvBC,0BAd2C,SAcjBC,KAC1BC,kBAf2C,SAezBC,KAClBC,iBAhB2C,aAiB3CC,oBAjB2C,aAmB3CC,YAnB2C,SAmB/BC,KACZC,eApB2C,SAoB5BC,KACfC,6BArB2C,SAsBzCD,EACAE,KAEFC,eAzB2C,SAyB5BL,KACfM,aA1B2C,SA2BzCN,EACAO,EACAC,EACAC,GAEA,OAAOC,QAAQC,QAAQ,IAAIC,SAAS,QAYxC,IAAMC,EAAS,IAAIC,UAAUvC,GAE7B,SAASwC,EAAUC,GACjBhE,QAAQC,IAAI,CAAC,aAAc+D,GAC3B,IACEH,EAAOI,KAAKpE,KAAKU,UAAUyD,IAC3B,MAAOE,GACPlE,QAAQD,MAAMmE,IA0PHC,UAtPf,WAAgB,IAAD,EACqB9E,EAChC,YACA,eAHW,mBACNsC,EADM,KACKyC,EADL,OAQT/E,EAAgB,8BAA+B,WARtC,mBAMXuC,EANW,KAOXyC,EAPW,OASmBhF,EAA0B,WAAY,QATzD,mBASNyB,EATM,KASIwD,EATJ,OAUyB9E,mBAASgC,GAVlC,mBAUNK,EAVM,KAUO0C,EAVP,OAW2C/E,mBACtD,IAZW,mBAWNwC,EAXM,KAWgBwC,EAXhB,OAc2ChF,mBAAS,IAdpD,mBAcNuC,EAdM,KAcgB0C,EAdhB,OAeqBjF,mBAASiC,GAf9B,mBAeNK,EAfM,KAeK4C,EAfL,KAgBPC,EAAiBvE,uBACrB,SAAC4D,GAAwB,IACfY,EAAoBZ,EAApBY,OAAQC,EAAYb,EAAZa,SAC+C,CAC7DC,gBAD6D,SAC7CD,GACdH,EAAaG,IAEflC,kBAJ6D,SAI3CkC,GAChBN,EAAeM,IAEjBE,2BAP6D,SAOlCF,GACzBJ,EAAwBI,IAE1BG,4BAV6D,SAUjCH,GAC1BR,EAA+BQ,IAEjCI,2BAb6D,SAalCJ,GACzBL,EAAwBK,MAInBD,GAAQC,KAEnB,CAACR,IAGHa,qBAAU,WACRrB,EAAOsB,OAAS,SAAAnB,GACdhE,QAAQC,IAAI,CAAC,oBAAqB+D,IAGpCH,EAAOuB,QAAU,SAAApB,GACfhE,QAAQC,IAAI,CAAC,qBAAsB+D,GAEnCqB,YAAW,WACT3F,OAAOyB,SAASmE,WACf,MAGLzB,EAAO0B,UAAY,SAAAvB,GACjBhE,QAAQC,IAAI,CAAC,uBAAwBJ,KAAKC,MAAMkE,EAAMwB,OACtDb,EA5EN,SACEc,GAC6C,IAAD,EAChB5F,KAAKC,MAAM2F,GAEvC,MAAO,CAAEb,OAHmC,EACpCA,OAESC,QAH2B,EAC5BA,SAyEGa,CAAa1B,EAAMwB,QAGpC3B,EAAO8B,QAAU,SAAA3B,GACfhE,QAAQD,MAAM,CAAC,qBAAsBiE,IAGvC,IAAM4B,EAAeC,aAAY,WAC/B9B,EAAU,CACRa,OAAQ,WAET,KAEH,OAAO,WACLkB,cAAcF,MAEf,CAACjB,IA4IJ,IAAMoB,EAAe,CACnBpE,UAAWA,EACXC,8BACAE,YACAD,cACAE,uBACAC,uBACAlB,WACAmB,iBApBF,WACE8B,EAAU,CACRa,OAAQ,sBAmBV1C,kBAfF,WACE6B,EAAU,CACRa,OAAQ,uBAcVzB,6BAnCF,SACE6C,EACAC,GAEAlC,EAAU,CACRa,OAAQ,+BACRC,QAAS,CACPmB,aACAC,aA4BJ1D,uBAvDF,SACE2D,GAEA1B,GAAwB,SAAA2B,GAAS,4BAAQA,GAAR,CAAmBD,OACpDnC,EAAU,CACRa,OAAQ,yBACRC,QAASqB,KAkDXpD,oBAhJF,WACEiB,EAAU,CACRa,OAAQ,sBACRC,QAASjD,KA8IXa,0BA/CF,SAAyC2D,GACvCrC,EAAU,CACRa,OAAQ,4BACRC,QAASuB,IAGX/B,EAA+B+B,IA0C/BjE,eAAgBmC,EAChBjC,gBAAiB+B,EACjBzB,kBAvEF,SAAiC0D,GAC/B9B,EAAe8B,GACftC,EAAU,CACRa,OAAQ,sBACRC,QAAS,CACPuB,sBAAuBxE,EACvB0E,MAAOD,MAkEXxD,iBA3JF,WACEkB,EAAU,CACRa,OAAQ,sBA0JV7B,YA/IF,SAA2BwD,GACzBxC,EAAU,CACRa,OAAQ,cACRC,QAAS0B,KA6IXlD,eAzIF,SAA8BkD,GAC5BxC,EAAU,CACRa,OAAQ,iBACRC,QAAS0B,KAuIXtD,eAnIF,SAA8B+C,GAC5BjC,EAAU,CACRa,OAAQ,iBACRC,QAASmB,KAiIX1C,aA7HF,WAEEkD,EACAC,EACAC,GAJF,gBAgBWC,EAhBX,WAAAC,EAAAC,OAAA,uDAgBWF,EAhBX,SAiBIG,EACAN,GAEA,IACMO,EADWD,EAAIE,MAAM,KAAKC,OAAOC,SACjBC,QAAO,SAACC,EAAKC,GAGjC,OAFqBA,EAAK,KAAOC,IAGzB,GAAN,OAAUF,EAAV,YAAiBZ,EAAca,EAAKE,MAAM,KAGtC,GAAN,OAAUH,EAAV,YAAiBC,KAChB,IAEH,MAAM,GAAN,OAAUhG,GAAV,OAAyBH,GAAzB,OAAoC6F,IA9BpCD,EADJ,EACIA,IAAKU,EADT,EACSA,OAKDC,EAAa5H,KAAKC,MAAM4G,GACxBgB,EAAqB,QAAXF,GAAuD,IAAnCG,OAAOC,KAAKH,GAAYI,OACtDC,EAAOJ,OAAUK,EAAYlI,KAAKU,UAAUkH,GAC5CO,EAAUN,OACZK,EACA,CACEE,OAAQ,mBACR,eAAgB,oBAqBhBC,EAlCR,UAkCuBvB,EACnBG,EACAN,GApCJ,YAqCOC,GAELzG,QAAQC,IAAI,CAAC,aAAciI,GAvC7B,YAAAtB,EAAA,MAyCeuB,MAAMD,EAAW,CAC5BJ,OACAN,SACAQ,UACAI,YAAa,aA7CjB,iFAgIA,OACE,yBAAKC,UAAU,OACb,kBAACrH,EAAgBsH,SAAjB,CAA0BjI,MAAO0F,GAC/B,kBAAClF,EAAD,U,iIC/UO,SAAS0H,EAAT,GAUX,IATFC,EASC,EATDA,KACAC,EAQC,EARDA,MAQC,IAPDC,gBAOC,MAPU,aAOV,EANDC,EAMC,EANDA,OAMC,EACyBnJ,mBAASgJ,GADlC,mBACMI,EADN,KACaC,EADb,OAE6BrJ,oBAAS,GAFtC,mBAEMsJ,EAFN,KAEeC,EAFf,OAGqCvJ,oBAAS,GAH9C,mBAGMwJ,EAHN,KAGmBC,EAHnB,KAcD,OACE,yBAAKC,MAAO,CAAEC,MAAO,SACnB,yBAAKD,MAAO,CAAEE,QAAS,OAAQC,WAAY,WACzC,kBAAC,IAAD,CAAYC,QAAQ,SAASb,GAC5BO,GAAeF,EACd,kBAAC,IAAD,CAAQS,QAVhB,WACER,GAAW,GACXJ,EAAOC,KAQD,QAEA,kBAAC,IAAD,CAAQW,QAAS,kBAAMR,GAAW,KAAlC,SAGJ,6BACGD,EACC,kBAAC,IAAD,CACEU,YAAU,EACVhB,KAAMI,EACNF,SAAUA,EACVe,QAzBV,WACER,GAAe,IAyBPN,OAAQE,IAGV,kBAAC,IAAD,CAAmBH,SAAUA,GAC1BF,EAAKkB,Y,gCCnDlB,uEAqBO,SAASC,EAAT,GAYH,IAXFhB,EAWC,EAXDA,OACAH,EAUC,EAVDA,KACAgB,EASC,EATDA,WACAd,EAQC,EARDA,SACAe,EAOC,EAPDA,QAQMG,EAAYC,oBA/BpB,SACED,EACAjB,GAEAzD,qBAAU,WAER,IAAM4E,EAAWjE,aAAY,WAC3B+D,EAAUG,SAAWpB,EAAOiB,EAAUG,aACrC,KAEH,OAAO,WACLjE,cAAcgE,MAEf,CAACF,EAAWjB,IAoBfqB,CAAYJ,EAAWjB,GAOvB,IAAMsB,EAAazB,EAAKxB,MAAM,cAAca,OAAS,EAC/CqC,EAASV,EAAU,UAzBR,GAyBcS,EAAN,MAAoC,QAE7D,OACE,kBAAC,IAAD,CACEE,eAVJ,SAA8BC,GAC5BX,GAAWA,IACXG,EAAUG,QAAUK,GASlBF,OAAQA,EACRxB,SAAUA,EACVrI,MAAOmI,EAAKkB,OACZP,MAAM,W,4PC7CG,SAASkB,EAAT,GAQX,IAPF9D,EAOC,EAPDA,SACA+D,EAMC,EANDA,YACA5D,EAKC,EALDA,YAKC,EACuBlH,oBAAS,GADhC,mBACM+K,EADN,KACYC,EADZ,KAUKC,EAAc,SAACzG,EAAoC0G,GACxC,cAAXA,GAIJF,GAAQ,IAGV,OACE,6BACE,kBAACG,EAAA,EAAD,CAAQpB,QAlBQ,oBAAA3C,EAAAC,OAAA,uDAClB2D,GAAQ,GADU,WAAA5D,EAAA,MAEZgE,UAAUC,UAAUC,UAApB,sEAC2DvE,EAASiB,OAAOuD,oBAD3E,oBAC0GlL,KAAKU,UACjHV,KAAKC,MAAM4G,IAFT,aAGEhH,OAAOyB,SAAS6J,OAHlB,YAG4BzE,EAASO,IAHrC,YAG4CwD,KALhC,uCAkBhB,0BACA,kBAACW,EAAA,EAAD,CACErG,OACE,kBAACsG,EAAA,EAAD,CACEC,aAAW,QACXC,MAAM,UACNC,KAAK,QACL9B,QAASkB,GAET,kBAAC,IAAD,CAAWa,SAAS,WAGxBC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,iBAAkB,IAClBjG,QAAQ,4BACR8E,KAAMA,EACNoB,QAASlB,K,aCjDF,SAASmB,EAAT,GAQX,IAPFrF,EAOC,EAPDA,SACAE,EAMC,EANDA,YACAoF,EAKC,EALDA,eAMA,OACE,oCACE,kBAACC,EAAA,EAAD,CAAYxC,QAAQ,aAApB,yBACA,yBAAKJ,MAAO,CAAEE,QAAS,SACpB7C,EAASwF,WAAWC,KAAI,WAAqBC,GAArB,EAAGC,GAAH,IAAOC,EAAP,EAAOA,KAAP,EAAaC,KAAb,OACvB,oCACE,kBAACN,EAAA,EAAD,CACE5C,MAAO,CAAEmD,UAAW,GAAIC,YAAa,GACrChD,QAAQ,SAFV,UAGK2C,EAAQ,EAAI,KAAO,IAHxB,OAG6BE,EAH7B,QAIA,kBAACI,EAAA,EAAD,CACEC,MAAOL,EACPM,YAAY,4BACZpM,MAAOoG,EAAY0F,GACnBO,SAAU,SAAA1I,GACR6H,EAAe,eACVpF,EADS,eAEX0F,EAAOnI,EAAM2I,OAAOtM,kBCxBxB,SAASuM,EAAT,GAQX,IAPFrG,EAOC,EAPDA,SACAC,EAMC,EANDA,cACAqG,EAKC,EALDA,iBAMMC,EAAWvG,EAASO,IAAIE,MAAM,KAAKC,OAAOC,SAEhD,OACE,oCACE,kBAAC4E,EAAA,EAAD,CAAY5C,MAAO,CAAE6D,SAAU,GAAKzD,QAAQ,aAA5C,uBAGA,yBAAKJ,MAAO,CAAEE,QAAS,SACpB0D,EAASd,KAAI,SAAA3E,GAGZ,GAtBkB,MAoBGA,EAAK,GAER,CAChB,IAAM2F,EAAgB3F,EAAKE,MAAM,GAC3BlH,EAAQmG,EAAcwG,GAE5B,OACE,kBAACT,EAAA,EAAD,CACEU,UAAQ,EACRT,MAAOQ,EACPP,YAAY,sBACZpM,MAAOA,EACPqM,SAAU,SAAA1I,GACR6I,EAAiB,eACZrG,EADW,eAEbwG,EAAgBhJ,EAAM2I,OAAOtM,YAMtC,OACE,kBAACyL,EAAA,EAAD,CACE5C,MAAO,CAAEmD,UAAW,GAAIC,YAAa,GACrChD,QAAQ,SAFV,UAGKjC,EAHL,Y,oECxBd,IAAM6F,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,YAAa,CACXC,SAAU,WACVC,MAAOJ,EAAMK,QAAQ,GACrBC,IAAKN,EAAMK,QAAQ,GACnBrC,MAAOgC,EAAMO,QAAQC,KAAK,WAQnBtG,EAAe,IA6Bb,SAASuG,EAAT,GAA6D,IAArCtH,EAAoC,EAApCA,SAAoC,EACjD/G,oBAAS,GADwC,mBAClE+K,EADkE,KAC5DC,EAD4D,OAEnChL,mBAnCnB,UAiCsD,mBAElEkH,EAFkE,KAErDoH,EAFqD,OAG3BtO,oBAAS,GAHkB,mBAGlEuO,EAHkE,KAGjDC,EAHiD,OAIjCxO,mBAAS,IAJwB,mBAIlEyO,EAJkE,KAIpDC,EAJoD,KAKnEd,EAAQe,cACRC,EAAUlB,IACVmB,EAAaC,YAAclB,EAAMmB,YAAYC,KAAK,OAChDlL,EAAiBvC,qBAAWC,mBAA5BsC,aARiE,EAS/B9D,mBACvB+G,EAASO,IApCVE,MAAM,KAAKC,OAAOC,SAEvBC,QAAO,SAACC,EAAKC,GACxB,OAAIA,EAAK,KAAOC,EACP,eACFF,EADL,eAEGC,EAAKE,MAAM,GAAK,KAIdH,IACN,KAesE,mBASlEZ,EATkE,KASnDqG,EATmD,OAYnCrN,mBAxBxC,SACEiH,GAEA,OAAOA,EAAYU,QACjB,SAACC,EAAKqH,GAAN,sBACKrH,EADL,eAEGqH,EAAWtC,KAAO,OAErB,IAiBAuC,CAAyBnI,EAASwF,aAbqC,mBAYlEtF,EAZkE,KAYrDoF,EAZqD,KAoBzE,SAASpB,KACPD,GAAQ,GAGV,SAASmE,GAAiBC,GACxB,OAAOjH,OAAOkH,QAAQD,GAAQzH,QAC5B,SAACC,EAAD,0BAAO+E,EAAP,KAAa9L,EAAb,qBAA2B+G,EAA3B,YAAkC+E,EAAlC,YAA0C9L,KAC1C,IAwBJ,OACE,6BACE,kBAACsK,EAAA,EAAD,CAAQpB,QArCZ,WACEiB,GAAQ,KAoCN,iBACA,kBAACsE,EAAA,EAAD,CACEC,sBAAoB,EACpBC,kBAAgB,yBAChBX,WAAYA,EACZY,SAAS,KACT1E,KAAMA,EACNoB,QAASlB,IAET,kBAACyE,EAAA,EAAD,CACEC,mBAAiB,EACjBjD,GAAG,yBACHhD,MAAO,CAAEkG,SAAU,MAEnB,kBAACtD,EAAA,EAAD,CACE5C,MAAO,CAAEoD,YAAa,IACtBhD,QAAQ,MAFV,wBAGmB/C,EAASiB,OAH5B,YAGsCjB,EAASO,MAC/C,kBAACoE,EAAA,EAAD,CACEC,aAAW,QACX9C,UAAW+F,EAAQd,YACnB/D,QAASkB,IAET,kBAAC4E,EAAA,EAAD,QAGH1H,OAAOC,KAAKpB,GAAeqB,OAAS,GACnC,kBAACyH,EAAA,EAAD,KACE,kBAAC1C,EAAD,CACErG,SAAUA,EACVsG,iBAAkBA,EAClBrG,cAAeA,KAIpBD,EAASwF,WAAWlE,OAAS,GAC5B,kBAACyH,EAAA,EAAD,KACE,kBAAC1D,EAAD,CACErF,SAAUA,EACVE,YAAaA,EACboF,eAAgBA,KAItB,kBAACyD,EAAA,EAAD,KACGvB,EACC,kBAACxF,EAAA,EAAD,CACEC,KAAM9B,EACNgC,SAAS,OACTD,MAAM,eACNE,OAAQmF,IAGV,kBAACnD,EAAA,EAAD,CAAQpB,QAAS,kBAAMyE,GAAmB,KAA1C,qBAKJ,kBAACsB,EAAA,EAAD,KACGrB,GACC,oCACE,kBAACnC,EAAA,EAAD,CAAYxC,QAAQ,SAApB,YACA,kBAAC,IAAD,CAAmBZ,SAAS,QACzB7I,KAAKU,UAAUV,KAAKC,MAAMmO,GAAe,KAAM,MAKxD,kBAACsB,EAAA,EAAD,KACE,kBAAClF,EAAD,CACE9D,SAAUA,EACV+D,YAAaqE,GAAiBlI,GAC9BC,YAAaA,IAEf,kBAACiE,EAAA,EAAD,CAAQpB,QAhGhB,8BAAA3C,EAAAC,OAAA,uDACQyD,EAAcqE,GAAiBlI,GADvC,WAAAG,EAAA,MAEyBtD,EACrBiD,EACAC,EACA8D,EACA5D,IANJ,aAEQ8I,EAFR,QASevJ,OAAS,KATxB,4CAAAW,EAAA,MAWyB4I,EAASC,QAXlC,OAWYjK,EAXZ,OAaM0I,EAAgBrO,KAAKU,UAAUiF,IAbrC,kDAeM0I,EAAgB,IAftB,2DAgGQ","file":"static/js/10.6c10914c.chunk.js","sourcesContent":["import { useCallback, useState } from 'react';\n\nexport default function useLocalstorage<T>(key: string, initialValue: T) {\n  const [storedValue, setLocalValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n  const setValue = useCallback(\n    (value: T) => {\n      try {\n        window.localStorage.setItem(key, JSON.stringify(value));\n        setLocalValue(value);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [key],\n  );\n\n  return [storedValue, setValue];\n}\n","import React, { lazy, Suspense, useContext } from 'react';\nimport { AppStateContext } from '../App';\n\nconst Header = lazy(() => import('../modules/header/Header'));\nconst BoardLayout = lazy(() => import('./layouts/BoardLayout'));\nconst PanelLayout = lazy(() => import('./layouts/PanelLayout'));\nconst TabsLayout = lazy(() => import('./layouts/TabsLayout'));\n\nexport default function Layout() {\n  const { viewMode } = useContext(AppStateContext);\n\n  return (\n    <>\n      <Suspense fallback=\"Loading header...\">\n        <Header />\n      </Suspense>\n      {viewMode === 'tabs' && (\n        <Suspense fallback=\"Loading tabs layout...\">\n          <TabsLayout />\n        </Suspense>\n      )}\n      {viewMode === 'panels' && (\n        <Suspense fallback=\"Loading panel layout...\">\n          <PanelLayout />\n        </Suspense>\n      )}\n      {viewMode === 'board' && (\n        <Suspense fallback=\"Loading board layout...\">\n          <BoardLayout />\n        </Suspense>\n      )}\n    </>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-empty-function,@typescript-eslint/no-unused-vars */\nimport React, { createContext, useCallback, useEffect, useState } from 'react';\nimport { ServerState } from '../interfaces';\nimport {\n  ClientEvent,\n  Endpoint,\n  HttpStatus,\n  ServerAction,\n  ServerEvent,\n  ServerStateScenario,\n} from '../sharedTypes';\nimport './App.css';\nimport useLocalstorage from './common/hooks/useLocalstorage';\nimport Layout from './layout/Layout';\nimport { TabKey } from './layout/layouts/TabsLayout';\nimport { urlDelimiter } from './modules/endpoints/test-endpoint/TestEndpoint';\n\nconst hostName =\n  process.env.NODE_ENV === 'production' &&\n  window.location.hostname !== 'localhost'\n    ? `moxy-proxy.herokuapp.com`\n    : `localhost:5000`;\nconst httpProtocol =\n  process.env.NODE_ENV === 'production' &&\n  window.location.hostname !== 'localhost'\n    ? 'https://'\n    : `http://`;\nconst socketsProtocol =\n  process.env.NODE_ENV === 'production' &&\n  window.location.hostname !== 'localhost'\n    ? 'wss://'\n    : `ws://`;\nconst socketHash = 'superHash123';\nconst socketUrl = `${socketsProtocol}${hostName}/${socketHash}`;\n\nfunction initialServerState(): ServerState {\n  //@ts-ignore\n  return {};\n}\n\nfunction initialEndpoint(): Endpoint[] {\n  return [];\n}\n\nexport type ViewMode = 'tabs' | 'panels' | 'board';\n\nexport const AppStateContext = createContext({\n  activeTab: 'serverState' as TabKey,\n  activeServerStateScenarioId: 'default',\n  viewMode: 'tabs' as ViewMode,\n  serverState: initialServerState(),\n  endpoints: initialEndpoint(),\n  serverStateInterface: '',\n  serverStateScenarios: [] as ServerStateScenario[],\n\n  persistEndpoints() {},\n  persistMockedData() {},\n  changeViewMode(_viewMode: ViewMode) {},\n  changeActiveTab(_tabKey: TabKey) {},\n  addServerStateScenario(_serverStateScenario: ServerStateScenario) {},\n  changeServerStateScenario(_serverStateScenarioId: string) {},\n  updateServerState(_serverState: ServerState) {},\n  resetServerState() {},\n  deleteStateScenario() {},\n\n  addEndpoint(_endpoint: Endpoint) {},\n  deleteEndpoint(_endpointId: string) {},\n  changeEndpointResponseStatus(\n    _endpointId: string,\n    _status: HttpStatus | null,\n  ) {},\n  updateEndpoint(_endpoint: Endpoint) {},\n  testEndpoint(\n    _endpoint: Endpoint,\n    _urlParameters: Record<string, string>,\n    _queryString: string,\n    _requestBody: string,\n  ) {\n    return Promise.resolve(new Response(''));\n  },\n});\n\nfunction parseMessage(\n  message: string,\n): { action: ServerAction; payload: unknown } {\n  const { action, payload } = JSON.parse(message);\n\n  return { action, payload };\n}\n\nconst socket = new WebSocket(socketUrl);\n\nfunction sendEvent(event: ClientEvent) {\n  console.log(['sendEvent'], event);\n  try {\n    socket.send(JSON.stringify(event));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction App() {\n  const [activeTab, setActiveTab] = useLocalstorage<TabKey>(\n    'activeTab',\n    'serverState',\n  );\n  const [\n    activeServerStateScenarioId,\n    setActiveServerStateScenarioId,\n  ] = useLocalstorage('activeServerStateScenarioId', 'default');\n  const [viewMode, setViewMode] = useLocalstorage<ViewMode>('viewMode', 'tabs');\n  const [serverState, setServerState] = useState(initialServerState);\n  const [serverStateScenarios, setServerStateScenarios] = useState(\n    [] as ServerStateScenario[],\n  );\n  const [serverStateInterface, setServerStateInterface] = useState('');\n  const [endpoints, setEndpoints] = useState(initialEndpoint);\n  const messageHandler = useCallback(\n    (event: ServerEvent) => {\n      const { action, payload } = event;\n      const handlers: Record<ServerAction, (payload: any) => void> = {\n        updateEndpoints(payload: Endpoint[]) {\n          setEndpoints(payload);\n        },\n        updateServerState(payload: ServerState) {\n          setServerState(payload);\n        },\n        updateServerStateInterface(payload: string) {\n          setServerStateInterface(payload);\n        },\n        updateActiveStateScenarioId(payload: string) {\n          setActiveServerStateScenarioId(payload);\n        },\n        updateServerStateScenarios(payload: ServerStateScenario[]) {\n          setServerStateScenarios(payload);\n        },\n      };\n\n      handlers[action](payload);\n    },\n    [setActiveServerStateScenarioId],\n  );\n\n  useEffect(() => {\n    socket.onopen = event => {\n      console.log(['WebSocket.onopen'], event);\n    };\n\n    socket.onclose = event => {\n      console.log(['WebSocket.onclose'], event);\n      // TODO wznawianie połączenia po utracie\n      setTimeout(() => {\n        window.location.reload();\n      }, 3000);\n    };\n\n    socket.onmessage = event => {\n      console.log(['WebSocket.onmessage'], JSON.parse(event.data));\n      messageHandler(parseMessage(event.data));\n    };\n\n    socket.onerror = event => {\n      console.error(['WebSocket.onerror'], event);\n    };\n\n    const pingInterval = setInterval(() => {\n      sendEvent({\n        action: 'ping',\n      });\n    }, 10000);\n\n    return () => {\n      clearInterval(pingInterval);\n    };\n  }, [messageHandler]);\n\n  function handleResetServerState() {\n    sendEvent({\n      action: 'resetServerState',\n    });\n  }\n\n  function handleDeleteStateScenario() {\n    sendEvent({\n      action: 'deleteStateScenario',\n      payload: activeServerStateScenarioId,\n    });\n  }\n\n  function handleAddEndpoint(endpoint: Endpoint) {\n    sendEvent({\n      action: 'addEndpoint',\n      payload: endpoint,\n    });\n  }\n\n  function handleUpdateEndpoint(endpoint: Endpoint) {\n    sendEvent({\n      action: 'updateEndpoint',\n      payload: endpoint,\n    });\n  }\n\n  function handleDeleteEndpoint(endpointId: string) {\n    sendEvent({\n      action: 'deleteEndpoint',\n      payload: endpointId,\n    });\n  }\n\n  async function handleTestEndpoint(\n    { url, method }: Endpoint,\n    urlParameters: Record<string, string>,\n    queryParams: string,\n    requestBody: string,\n  ) {\n    const parsedBody = JSON.parse(requestBody);\n    const isEmpty = method === 'get' || Object.keys(parsedBody).length === 0;\n    const body = isEmpty ? undefined : JSON.stringify(parsedBody);\n    const headers = isEmpty\n      ? undefined\n      : {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        };\n\n    function parseUrlWithParameters(\n      url: string,\n      urlParameters: Record<string, string>,\n    ) {\n      const urlParts = url.split('/').filter(Boolean);\n      const path = urlParts.reduce((acc, part) => {\n        const urlParameter = part[0] === urlDelimiter;\n\n        if (urlParameter) {\n          return `${acc}/${urlParameters[part.slice(1)]}`;\n        }\n\n        return `${acc}/${part}`;\n      }, '');\n\n      return `${httpProtocol}${hostName}${path}`;\n    }\n\n    const parsedUrl = `${parseUrlWithParameters(\n      url,\n      urlParameters,\n    )}?${queryParams}`;\n\n    console.log(['parsedUrl'], parsedUrl);\n\n    return await fetch(parsedUrl, {\n      body,\n      method,\n      headers,\n      credentials: 'include',\n    });\n  }\n\n  function handleServerStateChange(updatedServerState: ServerState) {\n    setServerState(updatedServerState);\n    sendEvent({\n      action: 'clientUpdatedServer',\n      payload: {\n        serverStateScenarioId: activeServerStateScenarioId,\n        state: updatedServerState,\n      },\n    });\n  }\n\n  function handleAddServerStateScenario(\n    serverStateScenario: ServerStateScenario,\n  ) {\n    setServerStateScenarios(scenarios => [...scenarios, serverStateScenario]);\n    sendEvent({\n      action: 'addServerStateScenario',\n      payload: serverStateScenario,\n    });\n  }\n\n  function handleChangeServerStateScenario(serverStateScenarioId: string) {\n    sendEvent({\n      action: 'changeServerStateScenario',\n      payload: serverStateScenarioId,\n    });\n    // @ts-ignore\n    setActiveServerStateScenarioId(serverStateScenarioId);\n  }\n\n  function handleChangeEndpointResponseStatus(\n    endpointId: string,\n    status: HttpStatus | null,\n  ) {\n    sendEvent({\n      action: 'changeEndpointResponseStatus',\n      payload: {\n        endpointId,\n        status,\n      },\n    });\n  }\n\n  function handlePersistEndpoints() {\n    sendEvent({\n      action: 'persistEndpoints',\n    });\n  }\n\n  function handlePersistMockedData() {\n    sendEvent({\n      action: 'persistMockedData',\n    });\n  }\n\n  const contextValue = {\n    activeTab: activeTab as TabKey,\n    activeServerStateScenarioId,\n    endpoints,\n    serverState,\n    serverStateInterface,\n    serverStateScenarios,\n    viewMode,\n    persistEndpoints: handlePersistEndpoints,\n    persistMockedData: handlePersistMockedData,\n    changeEndpointResponseStatus: handleChangeEndpointResponseStatus,\n    addServerStateScenario: handleAddServerStateScenario,\n    deleteStateScenario: handleDeleteStateScenario,\n    changeServerStateScenario: handleChangeServerStateScenario,\n    changeViewMode: setViewMode,\n    changeActiveTab: setActiveTab,\n    updateServerState: handleServerStateChange,\n    resetServerState: handleResetServerState,\n    addEndpoint: handleAddEndpoint,\n    updateEndpoint: handleUpdateEndpoint,\n    deleteEndpoint: handleDeleteEndpoint,\n    testEndpoint: handleTestEndpoint,\n  };\n\n  return (\n    <div className=\"App\">\n      <AppStateContext.Provider value={contextValue}>\n        <Layout />\n      </AppStateContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport React, { useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { Editor } from './Editor';\n\nexport default function CodeEditor({\n  code,\n  title,\n  language = 'javascript',\n  onSave,\n}: {\n  code: string;\n  title?: string;\n  language?: string;\n  onSave: any;\n}) {\n  const [draft, setDraft] = useState(code);\n  const [editing, setEditing] = useState(false);\n  const [editorReady, setEditorReady] = useState(false);\n\n  function handleEditorReady() {\n    setEditorReady(true);\n  }\n\n  function handleSave() {\n    setEditing(false);\n    onSave(draft);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Typography variant=\"body1\">{title}</Typography>\n        {editorReady && editing ? (\n          <Button onClick={handleSave}>Done</Button>\n        ) : (\n          <Button onClick={() => setEditing(true)}>Edit</Button>\n        )}\n      </div>\n      <div>\n        {editing ? (\n          <Editor\n            autoHeight\n            code={draft}\n            language={language}\n            onReady={handleEditorReady}\n            onSave={setDraft}\n          />\n        ) : (\n          <SyntaxHighlighter language={language}>\n            {code.trim()}\n          </SyntaxHighlighter>\n        )}\n      </div>\n    </div>\n  );\n}\n","import MonacoEditor from '@monaco-editor/react';\nimport React, { MutableRefObject, useEffect, useRef } from 'react';\n\nfunction useAutoSave(\n  editorRef: MutableRefObject<(() => string) | undefined>,\n  onSave: (value: string) => void,\n) {\n  useEffect(() => {\n    // TODO make it deferrable so there is only only real request after done editing\n    const interval = setInterval(() => {\n      editorRef.current && onSave(editorRef.current());\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [editorRef, onSave]);\n}\n\nconst lineHeight = 18;\n\nexport function Editor({\n  onSave,\n  code,\n  autoHeight,\n  language,\n  onReady,\n}: {\n  code: string;\n  language: string;\n  autoHeight?: boolean;\n  onSave(value: string): void;\n  onReady?(): void;\n}) {\n  const editorRef = useRef<() => string>();\n\n  useAutoSave(editorRef, onSave);\n\n  function handleEditorDidMount(valueGetter: (() => string) | undefined) {\n    onReady && onReady();\n    editorRef.current = valueGetter;\n  }\n\n  const linesCount = code.split(/\\r\\n|\\r|\\n/).length + 3;\n  const height = autoHeight ? `${linesCount * lineHeight}px` : '500px';\n\n  return (\n    <MonacoEditor\n      editorDidMount={handleEditorDidMount}\n      height={height}\n      language={language}\n      value={code.trim()}\n      width=\"100%\"\n    />\n  );\n}\n","import { IconButton } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Endpoint } from '../../../../sharedTypes';\n\nexport default function CopyCurl({\n  endpoint,\n  queryString,\n  requestBody,\n}: {\n  endpoint: Endpoint;\n  queryString: string;\n  requestBody: string;\n}) {\n  const [open, setOpen] = useState(false);\n  const handleClick = async () => {\n    setOpen(true);\n    await navigator.clipboard.writeText(\n      `curl -i --header \"Content-Type: application/json\" --request ${endpoint.method.toLocaleUpperCase()} --data '${JSON.stringify(\n        JSON.parse(requestBody),\n      )}' ${window.location.origin}/${endpoint.url}?${queryString}`,\n    );\n  };\n  const handleClose = (event: SyntheticEvent | MouseEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Copy CURL to clipboard</Button>\n      <Snackbar\n        action={\n          <IconButton\n            aria-label=\"close\"\n            color=\"inherit\"\n            size=\"small\"\n            onClick={handleClose}\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        autoHideDuration={6000}\n        message=\"CURL copied to clipboard!\"\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n","import { TextField } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { Endpoint } from '../../../../sharedTypes';\n\nexport default function QueryParameters({\n  endpoint,\n  queryParams,\n  setQueryParams,\n}: {\n  endpoint: Endpoint;\n  queryParams: any;\n  setQueryParams: any;\n}) {\n  return (\n    <>\n      <Typography variant=\"subtitle2\">Fill query parameters</Typography>\n      <div style={{ display: 'flex' }}>\n        {endpoint.parameters.map(({ id, name, type }, index) => (\n          <>\n            <Typography\n              style={{ marginTop: 20, marginRight: 5 }}\n              variant=\"body1\"\n            >{`${index > 0 ? '& ' : ''}${name} = `}</Typography>\n            <TextField\n              label={name}\n              placeholder=\"Set query parameter value\"\n              value={queryParams[name]}\n              onChange={event => {\n                setQueryParams({\n                  ...queryParams,\n                  [name]: event.target.value,\n                });\n              }}\n            />\n          </>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { TextField } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { Endpoint } from '../../../../sharedTypes';\n\nexport const urlDelimiter = ':';\n\nexport default function UrlParameters({\n  endpoint,\n  urlParameters,\n  setUrlParameters,\n}: {\n  endpoint: Endpoint;\n  urlParameters: any;\n  setUrlParameters: any;\n}) {\n  const urlParts = endpoint.url.split('/').filter(Boolean);\n\n  return (\n    <>\n      <Typography style={{ flexGrow: 1 }} variant=\"subtitle2\">\n        Fill url parameters\n      </Typography>\n      <div style={{ display: 'flex' }}>\n        {urlParts.map(part => {\n          const urlParameter = part[0] === urlDelimiter;\n\n          if (urlParameter) {\n            const parameterName = part.slice(1);\n            const value = urlParameters[parameterName];\n\n            return (\n              <TextField\n                required\n                label={parameterName}\n                placeholder=\"Set parameter value\"\n                value={value}\n                onChange={event => {\n                  setUrlParameters({\n                    ...urlParameters,\n                    [parameterName]: event.target.value,\n                  });\n                }}\n              />\n            );\n          } else {\n            return (\n              <Typography\n                style={{ marginTop: 20, marginRight: 5 }}\n                variant=\"body1\"\n              >{`${part} /`}</Typography>\n            );\n          }\n        })}\n      </div>\n    </>\n  );\n}\n","import { IconButton, useMediaQuery } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Close } from '@material-ui/icons';\nimport React, { useContext, useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { Endpoint, EndpointParameter } from '../../../../sharedTypes';\nimport { AppStateContext } from '../../../App';\nimport CodeEditor from '../../../common/CodeEditor';\nimport CopyCurl from './CopyCurl';\nimport QueryParameters from './QueryParameters';\nimport UrlParameters from './UrlParameters';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  }),\n);\nconst emptyJsonString = `\n{}\n`;\n\nexport const urlDelimiter = ':';\n\nfunction getUrlParameters(url: string): Record<string, string> {\n  const parts = url.split('/').filter(Boolean);\n\n  return parts.reduce((acc, part) => {\n    if (part[0] === urlDelimiter) {\n      return {\n        ...acc,\n        [part.slice(1)]: '',\n      };\n    }\n\n    return acc;\n  }, {} as Record<string, string>);\n}\n\nfunction initialQueryParamsValues(\n  queryParams: EndpointParameter[],\n): Record<string, string> {\n  return queryParams.reduce(\n    (acc, queryParam) => ({\n      ...acc,\n      [queryParam.name]: '',\n    }),\n    {},\n  );\n}\n\nexport default function TestEndpoint({ endpoint }: { endpoint: Endpoint }) {\n  const [open, setOpen] = useState(false);\n  const [requestBody, setRequestBody] = useState(emptyJsonString);\n  const [showRequestBody, setShowRequestBody] = useState(false);\n  const [responseJson, setResponseJson] = useState('');\n  const theme = useTheme();\n  const classes = useStyles();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n  const { testEndpoint } = useContext(AppStateContext);\n  const [urlParameters, setUrlParameters] = useState(\n    getUrlParameters(endpoint.url),\n  );\n  const [queryParams, setQueryParams] = useState(\n    initialQueryParamsValues(endpoint.parameters),\n  );\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function parseQueryParams(params: typeof queryParams) {\n    return Object.entries(params).reduce(\n      (acc, [name, value]) => `${acc}&${name}=${value}`,\n      '',\n    );\n  }\n\n  async function handleTest() {\n    const queryString = parseQueryParams(queryParams);\n    const response = await testEndpoint(\n      endpoint,\n      urlParameters,\n      queryString,\n      requestBody,\n    );\n\n    if (response.status < 300) {\n      try {\n        const data = await response.json();\n\n        setResponseJson(JSON.stringify(data));\n      } catch (e) {\n        setResponseJson('');\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>Test endpoint</Button>\n      <Dialog\n        closeAfterTransition\n        aria-labelledby=\"max-width-dialog-title\"\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle\n          disableTypography\n          id=\"max-width-dialog-title\"\n          style={{ minWidth: 500 }}\n        >\n          <Typography\n            style={{ marginRight: 40 }}\n            variant=\"h6\"\n          >{`Test endpoint ${endpoint.method}:${endpoint.url}`}</Typography>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={handleClose}\n          >\n            <Close />\n          </IconButton>\n        </DialogTitle>\n        {Object.keys(urlParameters).length > 0 && (\n          <DialogContent>\n            <UrlParameters\n              endpoint={endpoint}\n              setUrlParameters={setUrlParameters}\n              urlParameters={urlParameters}\n            />\n          </DialogContent>\n        )}\n        {endpoint.parameters.length > 0 && (\n          <DialogContent>\n            <QueryParameters\n              endpoint={endpoint}\n              queryParams={queryParams}\n              setQueryParams={setQueryParams}\n            />\n          </DialogContent>\n        )}\n        <DialogContent>\n          {showRequestBody ? (\n            <CodeEditor\n              code={requestBody}\n              language=\"json\"\n              title=\"Request body\"\n              onSave={setRequestBody}\n            />\n          ) : (\n            <Button onClick={() => setShowRequestBody(true)}>\n              Add request body\n            </Button>\n          )}\n        </DialogContent>\n        <DialogContent>\n          {responseJson && (\n            <>\n              <Typography variant=\"body1\">Response</Typography>\n              <SyntaxHighlighter language=\"json\">\n                {JSON.stringify(JSON.parse(responseJson), null, 2)}\n              </SyntaxHighlighter>\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <CopyCurl\n            endpoint={endpoint}\n            queryString={parseQueryParams(queryParams)}\n            requestBody={requestBody}\n          />\n          <Button onClick={handleTest}>Test</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"],"sourceRoot":""}