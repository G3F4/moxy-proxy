{"version":3,"sources":["common/hooks/useLocalstorage.ts","layout/Layout.tsx","App.tsx","common/CodeEditor.tsx","common/Editor.tsx","modules/endpoints/test-endpoint/CopyCurl.tsx","modules/endpoints/test-endpoint/QueryParameters.tsx","modules/endpoints/test-endpoint/UrlParameters.tsx","modules/endpoints/test-endpoint/TestEndpoint.tsx"],"names":["useLocalstorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setLocalValue","useCallback","value","setItem","stringify","Header","lazy","BoardLayout","PanelLayout","TabsLayout","Layout","viewMode","useContext","AppStateContext","fallback","initialServerState","initialEndpoint","createContext","activeTab","activeServerStateScenarioId","serverState","endpoints","serverStateInterface","serverStateScenarios","persistEndpoints","persistMockedData","changeViewMode","_viewMode","changeActiveTab","_tabKey","addServerStateScenario","_serverStateScenario","changeServerStateScenario","_serverStateScenarioId","updateServerState","_serverState","resetServerState","deleteStateScenario","addEndpoint","_endpoint","deleteEndpoint","_endpointId","changeEndpointResponseStatus","_status","updateEndpoint","testEndpoint","_urlParameters","_queryString","_requestBody","Promise","resolve","Response","getApiUrl","process","REACT_APP_API_URL","socket","WebSocket","REACT_APP_SOCKET_URL","sendEvent","event","send","e","App","setActiveTab","setActiveServerStateScenarioId","setViewMode","setServerState","setServerStateScenarios","setServerStateInterface","setEndpoints","messageHandler","action","payload","updateEndpoints","updateServerStateInterface","updateActiveStateScenarioId","updateServerStateScenarios","urlParameters","queryParams","requestBody","parseUrlWithParameters","a","url","path","split","filter","Boolean","reduce","acc","part","urlDelimiter","slice","method","parsedBody","isEmpty","Object","keys","length","body","undefined","headers","Accept","parsedUrl","fetch","credentials","useEffect","onopen","onclose","setTimeout","location","reload","onmessage","data","message","parseMessage","onerror","pingInterval","setInterval","clearInterval","contextValue","endpointId","status","serverStateScenario","scenarios","serverStateScenarioId","updatedServerState","state","endpoint","className","Provider","CodeEditor","code","title","language","onSave","draft","setDraft","editing","setEditing","editorReady","setEditorReady","style","width","display","alignItems","variant","onClick","autoHeight","onReady","trim","Editor","editorRef","useRef","interval","current","useAutoSave","linesCount","height","editorDidMount","valueGetter","CopyCurl","queryString","open","setOpen","handleClick","navigator","clipboard","writeText","toLocaleUpperCase","origin","handleClose","reason","Button","Snackbar","IconButton","aria-label","color","size","fontSize","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","QueryParameters","setQueryParams","Typography","parameters","map","index","id","name","type","marginTop","marginRight","TextField","label","placeholder","onChange","target","UrlParameters","setUrlParameters","urlParts","flexGrow","parameterName","required","useStyles","makeStyles","theme","createStyles","closeButton","position","right","spacing","top","palette","grey","TestEndpoint","setRequestBody","showRequestBody","setShowRequestBody","responseJson","setResponseJson","useTheme","classes","fullScreen","useMediaQuery","breakpoints","down","queryParam","initialQueryParamsValues","parseQueryParams","params","entries","response","json","Dialog","closeAfterTransition","aria-labelledby","maxWidth","DialogTitle","disableTypography","minWidth","Close","DialogContent","DialogActions"],"mappings":"iQAEe,SAASA,EAAmBC,EAAaC,GAAkB,IAAD,EAClCC,oBAAS,WAC5C,IACE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GAEzC,OAAOG,EAAOI,KAAKC,MAAML,GAAQF,EACjC,MAAOQ,GAGP,OAFAC,QAAQC,IAAIF,GAELR,MAT4D,mBAChEW,EADgE,KACnDC,EADmD,KAwBvE,MAAO,CAACD,EAZSE,uBACf,SAACC,GACC,IACEX,OAAOC,aAAaW,QAAQhB,EAAKO,KAAKU,UAAUF,IAChDF,EAAcE,GACd,MAAON,GACPC,QAAQD,MAAMA,MAGlB,CAACT,KCpBL,IAAMkB,EAASC,gBAAK,kBAAM,kCACpBC,EAAcD,gBAAK,kBAAM,kCACzBE,EAAcF,gBAAK,kBAAM,kCACzBG,EAAaH,gBAAK,kBAAM,wDAEf,SAASI,IAAU,IACxBC,EAAaC,qBAAWC,GAAxBF,SAER,OACE,oCACE,kBAAC,WAAD,CAAUG,SAAS,qBACjB,kBAACT,EAAD,OAEY,SAAbM,GACC,kBAAC,WAAD,CAAUG,SAAS,0BACjB,kBAACL,EAAD,OAGU,WAAbE,GACC,kBAAC,WAAD,CAAUG,SAAS,2BACjB,kBAACN,EAAD,OAGU,UAAbG,GACC,kBAAC,WAAD,CAAUG,SAAS,2BACjB,kBAACP,EAAD,Q,YCXV,SAASQ,IAEP,MAAO,GAGT,SAASC,IACP,MAAO,GAKF,IAAMH,EAAkBI,wBAAc,CAC3CC,UAAW,cACXC,4BAA6B,UAC7BR,SAAU,OACVS,YAbO,GAcPC,UAVO,GAWPC,qBAAsB,GACtBC,qBAAsB,GAEtBC,iBAT2C,aAU3CC,kBAV2C,aAW3CC,eAX2C,SAW5BC,KACfC,gBAZ2C,SAY3BC,KAChBC,uBAb2C,SAapBC,KACvBC,0BAd2C,SAcjBC,KAC1BC,kBAf2C,SAezBC,KAClBC,iBAhB2C,aAiB3CC,oBAjB2C,aAmB3CC,YAnB2C,SAmB/BC,KACZC,eApB2C,SAoB5BC,KACfC,6BArB2C,SAsBzCD,EACAE,KAEFC,eAzB2C,SAyB5BL,KACfM,aA1B2C,SA2BzCN,EACAO,EACAC,EACAC,GAEA,OAAOC,QAAQC,QAAQ,IAAIC,SAAS,QAoBxC,SAASC,IACP,OAAIC,oHAAYC,kBACPD,oHAAYC,kBAGd,mCAGT,IAAMC,EAAS,IAAIC,UAfbH,oHAAYI,qBACPJ,oHAAYI,qBAGd,+CAaT,SAASC,EAAUC,GACjB9D,QAAQC,IAAI,CAAC,aAAc6D,GAC3B,IACEJ,EAAOK,KAAKlE,KAAKU,UAAUuD,IAC3B,MAAOE,GACPhE,QAAQD,MAAMiE,IA0PHC,UAtPf,WAAgB,IAAD,EACqB5E,EAChC,YACA,eAHW,mBACNgC,EADM,KACK6C,EADL,OAQT7E,EAAgB,8BAA+B,WARtC,mBAMXiC,EANW,KAOX6C,EAPW,OASmB9E,EAA0B,WAAY,QATzD,mBASNyB,EATM,KASIsD,EATJ,OAUyB5E,mBAAS0B,GAVlC,mBAUNK,EAVM,KAUO8C,EAVP,OAW2C7E,mBACtD,IAZW,mBAWNkC,EAXM,KAWgB4C,EAXhB,OAc2C9E,mBAAS,IAdpD,mBAcNiC,EAdM,KAcgB8C,EAdhB,OAeqB/E,mBAAS2B,GAf9B,mBAeNK,EAfM,KAeKgD,EAfL,KAgBPC,EAAiBrE,uBACrB,SAAC0D,GAAwB,IACfY,EAAoBZ,EAApBY,OAAQC,EAAYb,EAAZa,SAC+C,CAC7DC,gBAD6D,SAC7CD,GACdH,EAAaG,IAEftC,kBAJ6D,SAI3CsC,GAChBN,EAAeM,IAEjBE,2BAP6D,SAOlCF,GACzBJ,EAAwBI,IAE1BG,4BAV6D,SAUjCH,GAC1BR,EAA+BQ,IAEjCI,2BAb6D,SAalCJ,GACzBL,EAAwBK,MAInBD,GAAQC,KAEnB,CAACR,IAvCU,4CA6Gb,aAEEa,EACAC,EACAC,GAJF,gBAgBWC,EAhBX,WAAAC,EAAA,6DAgBWD,EAhBX,SAiBIE,EACAL,GAEA,IACMM,EADWD,EAAIE,MAAM,KAAKC,OAAOC,SACjBC,QAAO,SAACC,EAAKC,GAGjC,OAFqBA,EAAK,KAAOC,IAGzB,GAAN,OAAUF,EAAV,YAAiBX,EAAcY,EAAKE,MAAM,KAGtC,GAAN,OAAUH,EAAV,YAAiBC,KAChB,IAEH,MAAM,GAAN,OAAUrC,KAAV,OAAwB+B,IA9BxBD,EADJ,EACIA,IAAKU,EADT,EACSA,OAKDC,EAAanG,KAAKC,MAAMoF,GACxBe,EAAqB,QAAXF,GAAuD,IAAnCG,OAAOC,KAAKH,GAAYI,OACtDC,EAAOJ,OAAUK,EAAYzG,KAAKU,UAAUyF,GAC5CO,EAAUN,OACZK,EACA,CACEE,OAAQ,mBACR,eAAgB,oBAqBhBC,EAlCR,UAkCuBtB,EACnBE,EACAL,GApCJ,YAqCOC,GAELjF,QAAQC,IAAI,CAAC,aAAcwG,GAvC7B,UAyCeC,MAAMD,EAAW,CAC5BJ,OACAN,SACAQ,UACAI,YAAa,YA7CjB,sFA7Ga,sBA0CbC,qBAAU,WACRlD,EAAOmD,OAAS,SAAC/C,GACf9D,QAAQC,IAAI,CAAC,oBAAqB6D,IAGpCJ,EAAOoD,QAAU,SAAChD,GAChB9D,QAAQC,IAAI,CAAC,qBAAsB6D,GAEnCiD,YAAW,WACTrH,OAAOsH,SAASC,WACf,MAGLvD,EAAOwD,UAAY,SAACpD,GAClB9D,QAAQC,IAAI,CAAC,uBAAwBJ,KAAKC,MAAMgE,EAAMqD,OACtD1C,EA5FN,SACE2C,GAC6C,IAAD,EAChBvH,KAAKC,MAAMsH,GAEvC,MAAO,CAAE1C,OAHmC,EACpCA,OAESC,QAH2B,EAC5BA,SAyFG0C,CAAavD,EAAMqD,QAGpCzD,EAAO4D,QAAU,SAACxD,GAChB9D,QAAQD,MAAM,CAAC,qBAAsB+D,IAGvC,IAAMyD,EAAeC,aAAY,WAC/B3D,EAAU,CACRa,OAAQ,WAET,KAEH,OAAO,WACL+C,cAAcF,MAEf,CAAC9C,IA4IJ,IAAMiD,EAAe,CACnBrG,UAAWA,EACXC,8BACAE,YACAD,cACAE,uBACAC,uBACAZ,WACAa,iBApBF,WACEkC,EAAU,CACRa,OAAQ,sBAmBV9C,kBAfF,WACEiC,EAAU,CACRa,OAAQ,uBAcV7B,6BAnCF,SACE8E,EACAC,GAEA/D,EAAU,CACRa,OAAQ,+BACRC,QAAS,CACPgD,aACAC,aA4BJ3F,uBAvDF,SACE4F,GAEAvD,GAAwB,SAACwD,GAAD,4BAAmBA,GAAnB,CAA8BD,OACtDhE,EAAU,CACRa,OAAQ,yBACRC,QAASkD,KAkDXrF,oBAhJF,WACEqB,EAAU,CACRa,OAAQ,sBACRC,QAASrD,KA8IXa,0BA/CF,SAAyC4F,GACvClE,EAAU,CACRa,OAAQ,4BACRC,QAASoD,IAGX5D,EAA+B4D,IA0C/BlG,eAAgBuC,EAChBrC,gBAAiBmC,EACjB7B,kBAvEF,SAAiC2F,GAC/B3D,EAAe2D,GACfnE,EAAU,CACRa,OAAQ,sBACRC,QAAS,CACPoD,sBAAuBzG,EACvB2G,MAAOD,MAkEXzF,iBA3JF,WACEsB,EAAU,CACRa,OAAQ,sBA0JVjC,YA/IF,SAA2ByF,GACzBrE,EAAU,CACRa,OAAQ,cACRC,QAASuD,KA6IXnF,eAzIF,SAA8BmF,GAC5BrE,EAAU,CACRa,OAAQ,iBACRC,QAASuD,KAuIXvF,eAnIF,SAA8BgF,GAC5B9D,EAAU,CACRa,OAAQ,iBACRC,QAASgD,KAiIX3E,aA1OW,mDA6Ob,OACE,yBAAKmF,UAAU,OACb,kBAACnH,EAAgBoH,SAAjB,CAA0B/H,MAAOqH,GAC/B,kBAAC7G,EAAD,U,iIC7UO,SAASwH,EAAT,GAUX,IATFC,EASC,EATDA,KACAC,EAQC,EARDA,MAQC,IAPDC,gBAOC,MAPU,aAOV,EANDC,EAMC,EANDA,OAMC,EACyBjJ,mBAAS8I,GADlC,mBACMI,EADN,KACaC,EADb,OAE6BnJ,oBAAS,GAFtC,mBAEMoJ,EAFN,KAEeC,EAFf,OAGqCrJ,oBAAS,GAH9C,mBAGMsJ,EAHN,KAGmBC,EAHnB,KAcD,OACE,yBAAKC,MAAO,CAAEC,MAAO,SACnB,yBAAKD,MAAO,CAAEE,QAAS,OAAQC,WAAY,WACzC,kBAAC,IAAD,CAAYC,QAAQ,SAASb,GAC5BO,GAAeF,EACd,kBAAC,IAAD,CAAQS,QAVhB,WACER,GAAW,GACXJ,EAAOC,KAQD,QAEA,kBAAC,IAAD,CAAQW,QAAS,kBAAMR,GAAW,KAAlC,SAGJ,6BACGD,EACC,kBAAC,IAAD,CACEU,YAAU,EACVhB,KAAMI,EACNF,SAAUA,EACVe,QAzBV,WACER,GAAe,IAyBPN,OAAQE,IAGV,kBAAC,IAAD,CAAmBH,SAAUA,GAC1BF,EAAKkB,Y,gCCnDlB,wEAqBO,SAASC,EAAT,GAYH,IAXFhB,EAWC,EAXDA,OACAH,EAUC,EAVDA,KACAgB,EASC,EATDA,WACAd,EAQC,EARDA,SACAe,EAOC,EAPDA,QAQMG,EAAYC,oBA/BpB,SACED,EACAjB,GAEA7B,qBAAU,WAER,IAAMgD,EAAWpC,aAAY,WAC3BkC,EAAUG,SAAWpB,EAAOiB,EAAUG,aACrC,KAEH,OAAO,WACLpC,cAAcmC,MAEf,CAACF,EAAWjB,IAoBfqB,CAAYJ,EAAWjB,GAOvB,IAAMsB,EAAazB,EAAK/C,MAAM,cAAca,OAAS,EAC/C4D,EAASV,EAAU,UAzBR,GAyBcS,EAAN,MAAoC,QAE7D,OACE,kBAAC,IAAD,CACEE,eAVJ,SAA8BC,GAC5BX,GAAWA,IACXG,EAAUG,QAAUK,GASlBF,OAAQA,EACRxB,SAAUA,EACVnI,MAAOiI,EAAKkB,OACZP,MAAM,W,wUC7CG,SAASkB,EAAT,GAQX,IAPFjC,EAOC,EAPDA,SACAkC,EAMC,EANDA,YACAlF,EAKC,EALDA,YAKC,EACuB1F,oBAAS,GADhC,mBACM6K,EADN,KACYC,EADZ,KAEKC,EAAW,uCAAG,sBAAAnF,EAAA,6DAClBkF,GAAQ,GADU,SAEZE,UAAUC,UAAUC,UAApB,sEAC2DxC,EAASnC,OAAO4E,oBAD3E,oBAC0G9K,KAAKU,UACjHV,KAAKC,MAAMoF,IAFT,aAGExF,OAAOsH,SAAS4D,OAHlB,YAG4B1C,EAAS7C,IAHrC,YAG4C+E,IALhC,2CAAH,qDAQXS,EAAc,SAAC/G,EAAoCgH,GACxC,cAAXA,GAIJR,GAAQ,IAGV,OACE,6BACE,kBAACS,EAAA,EAAD,CAAQ1B,QAASkB,GAAjB,0BACA,kBAACS,EAAA,EAAD,CACEtG,OACE,kBAACuG,EAAA,EAAD,CACEC,aAAW,QACXC,MAAM,UACNC,KAAK,QACL/B,QAASwB,GAET,kBAAC,IAAD,CAAWQ,SAAS,WAGxBC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,iBAAkB,IAClBrE,QAAQ,4BACRiD,KAAMA,EACNqB,QAASb,K,aCjDF,SAASc,EAAT,GAQX,IAPFzD,EAOC,EAPDA,SACAjD,EAMC,EANDA,YACA2G,EAKC,EALDA,eAMA,OACE,oCACE,kBAACC,EAAA,EAAD,CAAYzC,QAAQ,aAApB,yBACA,yBAAKJ,MAAO,CAAEE,QAAS,SACpBhB,EAAS4D,WAAWC,KAAI,WAAqBC,GAArB,EAAGC,GAAH,IAAOC,EAAP,EAAOA,KAAP,EAAaC,KAAb,OACvB,oCACE,kBAACN,EAAA,EAAD,CACE7C,MAAO,CAAEoD,UAAW,GAAIC,YAAa,GACrCjD,QAAQ,SAFV,UAGK4C,EAAQ,EAAI,KAAO,IAHxB,OAG6BE,EAH7B,QAIA,kBAACI,EAAA,EAAD,CACEC,MAAOL,EACPM,YAAY,4BACZnM,MAAO4E,EAAYiH,GACnBO,SAAU,SAAA3I,GACR8H,EAAe,2BACV3G,GADS,kBAEXiH,EAAOpI,EAAM4I,OAAOrM,kBCxBxB,SAASsM,EAAT,GAQX,IAPFzE,EAOC,EAPDA,SACAlD,EAMC,EANDA,cACA4H,EAKC,EALDA,iBAMMC,EAAW3E,EAAS7C,IAAIE,MAAM,KAAKC,OAAOC,SAEhD,OACE,oCACE,kBAACoG,EAAA,EAAD,CAAY7C,MAAO,CAAE8D,SAAU,GAAK1D,QAAQ,aAA5C,uBAGA,yBAAKJ,MAAO,CAAEE,QAAS,SACpB2D,EAASd,KAAI,SAAAnG,GAGZ,GAtBkB,MAoBGA,EAAK,GAER,CAChB,IAAMmH,EAAgBnH,EAAKE,MAAM,GAC3BzF,EAAQ2E,EAAc+H,GAE5B,OACE,kBAACT,EAAA,EAAD,CACEU,UAAQ,EACRT,MAAOQ,EACPP,YAAY,sBACZnM,MAAOA,EACPoM,SAAU,SAAA3I,GACR8I,EAAiB,2BACZ5H,GADW,kBAEb+H,EAAgBjJ,EAAM4I,OAAOrM,YAMtC,OACE,kBAACwL,EAAA,EAAD,CACE7C,MAAO,CAAEoD,UAAW,GAAIC,YAAa,GACrCjD,QAAQ,SAFV,UAGKxD,EAHL,YCxBd,IAAMqH,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,YAAa,CACXC,SAAU,WACVC,MAAOJ,EAAMK,QAAQ,GACrBC,IAAKN,EAAMK,QAAQ,GACnBrC,MAAOgC,EAAMO,QAAQC,KAAK,WAQnB9H,EAAe,IA6Bb,SAAS+H,EAAT,GAA6D,IAArC1F,EAAoC,EAApCA,SAAoC,EACjD1I,oBAAS,GADwC,mBAClE6K,EADkE,KAC5DC,EAD4D,OAEnC9K,mBAnCnB,UAiCsD,mBAElE0F,EAFkE,KAErD2I,EAFqD,OAG3BrO,oBAAS,GAHkB,mBAGlEsO,EAHkE,KAGjDC,EAHiD,OAIjCvO,mBAAS,IAJwB,mBAIlEwO,EAJkE,KAIpDC,EAJoD,KAKnEd,EAAQe,cACRC,EAAUlB,IACVmB,EAAaC,YAAclB,EAAMmB,YAAYC,KAAK,OAChDvL,EAAiBjC,qBAAWC,mBAA5BgC,aARiE,EAS/BxD,mBACvB0I,EAAS7C,IApCVE,MAAM,KAAKC,OAAOC,SAEvBC,QAAO,SAACC,EAAKC,GACxB,OAAIA,EAAK,KAAOC,EACP,2BACFF,GADL,kBAEGC,EAAKE,MAAM,GAAK,KAIdH,IACN,KAesE,mBASlEX,EATkE,KASnD4H,EATmD,OAYnCpN,mBAxBxC,SACEyF,GAEA,OAAOA,EAAYS,QACjB,SAACC,EAAK6I,GAAN,mBAAC,eACI7I,GADL,kBAEG6I,EAAWtC,KAAO,OAErB,IAiBAuC,CAAyBvG,EAAS4D,aAbqC,mBAYlE7G,EAZkE,KAYrD2G,GAZqD,KAoBzE,SAASf,KACPP,GAAQ,GAGV,SAASoE,GAAiBC,GACxB,OAAOzI,OAAO0I,QAAQD,GAAQjJ,QAC5B,SAACC,EAAD,0BAAOuG,EAAP,KAAa7L,EAAb,qBAA2BsF,EAA3B,YAAkCuG,EAAlC,YAA0C7L,KAC1C,IA3BqE,8CA+BzE,gCAAA+E,EAAA,6DACQgF,EAAcsE,GAAiBzJ,GADvC,SAEyBjC,EACrBkF,EACAlD,EACAoF,EACAlF,GANJ,aAEQ2J,EAFR,QASejH,OAAS,KATxB,0CAWyBiH,EAASC,OAXlC,OAWY3H,EAXZ,OAaM8G,EAAgBpO,KAAKU,UAAU4G,IAbrC,kDAeM8G,EAAgB,IAftB,2DA/ByE,sBAmDzE,OACE,6BACE,kBAAClD,EAAA,EAAD,CAAQ1B,QArCZ,WACEiB,GAAQ,KAoCN,iBACA,kBAACyE,EAAA,EAAD,CACEC,sBAAoB,EACpBC,kBAAgB,yBAChBb,WAAYA,EACZc,SAAS,KACT7E,KAAMA,EACNqB,QAASb,IAET,kBAACsE,EAAA,EAAD,CACEC,mBAAiB,EACjBnD,GAAG,yBACHjD,MAAO,CAAEqG,SAAU,MAEnB,kBAACxD,EAAA,EAAD,CACE7C,MAAO,CAAEqD,YAAa,IACtBjD,QAAQ,MAFV,wBAGmBlB,EAASnC,OAH5B,YAGsCmC,EAAS7C,MAC/C,kBAAC4F,EAAA,EAAD,CACEC,aAAW,QACX/C,UAAWgG,EAAQd,YACnBhE,QAASwB,IAET,kBAACyE,EAAA,EAAD,QAGHpJ,OAAOC,KAAKnB,GAAeoB,OAAS,GACnC,kBAACmJ,EAAA,EAAD,KACE,kBAAC5C,EAAD,CACEzE,SAAUA,EACV0E,iBAAkBA,EAClB5H,cAAeA,KAIpBkD,EAAS4D,WAAW1F,OAAS,GAC5B,kBAACmJ,EAAA,EAAD,KACE,kBAAC5D,EAAD,CACEzD,SAAUA,EACVjD,YAAaA,EACb2G,eAAgBA,MAItB,kBAAC2D,EAAA,EAAD,KACGzB,EACC,kBAACzF,EAAA,EAAD,CACEC,KAAMpD,EACNsD,SAAS,OACTD,MAAM,eACNE,OAAQoF,IAGV,kBAAC9C,EAAA,EAAD,CAAQ1B,QAAS,kBAAM0E,GAAmB,KAA1C,qBAKJ,kBAACwB,EAAA,EAAD,KACGvB,GACC,oCACE,kBAACnC,EAAA,EAAD,CAAYzC,QAAQ,SAApB,YACA,kBAAC,IAAD,CAAmBZ,SAAS,QACzB3I,KAAKU,UAAUV,KAAKC,MAAMkO,GAAe,KAAM,MAKxD,kBAACwB,EAAA,EAAD,KACE,kBAACrF,EAAD,CACEjC,SAAUA,EACVkC,YAAasE,GAAiBzJ,GAC9BC,YAAaA,IAEf,kBAAC6F,EAAA,EAAD,CAAQ1B,QA/HyD,6CA+HjE","file":"static/js/10.23199d00.chunk.js","sourcesContent":["import { useCallback, useState } from 'react';\n\nexport default function useLocalstorage<T>(key: string, initialValue: T) {\n  const [storedValue, setLocalValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n  const setValue = useCallback(\n    (value: T) => {\n      try {\n        window.localStorage.setItem(key, JSON.stringify(value));\n        setLocalValue(value);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [key],\n  );\n\n  return [storedValue, setValue];\n}\n","import React, { lazy, Suspense, useContext } from 'react';\nimport { AppStateContext } from '../App';\n\nconst Header = lazy(() => import('../modules/header/Header'));\nconst BoardLayout = lazy(() => import('./layouts/BoardLayout'));\nconst PanelLayout = lazy(() => import('./layouts/PanelLayout'));\nconst TabsLayout = lazy(() => import('./layouts/TabsLayout'));\n\nexport default function Layout() {\n  const { viewMode } = useContext(AppStateContext);\n\n  return (\n    <>\n      <Suspense fallback=\"Loading header...\">\n        <Header />\n      </Suspense>\n      {viewMode === 'tabs' && (\n        <Suspense fallback=\"Loading tabs layout...\">\n          <TabsLayout />\n        </Suspense>\n      )}\n      {viewMode === 'panels' && (\n        <Suspense fallback=\"Loading panel layout...\">\n          <PanelLayout />\n        </Suspense>\n      )}\n      {viewMode === 'board' && (\n        <Suspense fallback=\"Loading board layout...\">\n          <BoardLayout />\n        </Suspense>\n      )}\n    </>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-empty-function,@typescript-eslint/no-unused-vars */\nimport React, { createContext, useCallback, useEffect, useState } from 'react';\nimport {\n  ClientEvent,\n  Endpoint,\n  HttpStatus,\n  ServerAction,\n  ServerEvent,\n  ServerState,\n  ServerStateScenario,\n} from '../sharedTypes';\nimport './App.css';\nimport useLocalstorage from './common/hooks/useLocalstorage';\nimport Layout from './layout/Layout';\nimport { TabKey } from './layout/layouts/TabsLayout';\nimport { urlDelimiter } from './modules/endpoints/test-endpoint/TestEndpoint';\n\nfunction initialServerState(): ServerState {\n  //@ts-ignore\n  return {};\n}\n\nfunction initialEndpoint(): Endpoint[] {\n  return [];\n}\n\nexport type ViewMode = 'tabs' | 'panels' | 'board';\n\nexport const AppStateContext = createContext({\n  activeTab: 'serverState' as TabKey,\n  activeServerStateScenarioId: 'default',\n  viewMode: 'tabs' as ViewMode,\n  serverState: initialServerState(),\n  endpoints: initialEndpoint(),\n  serverStateInterface: '',\n  serverStateScenarios: [] as ServerStateScenario[],\n\n  persistEndpoints() {},\n  persistMockedData() {},\n  changeViewMode(_viewMode: ViewMode) {},\n  changeActiveTab(_tabKey: TabKey) {},\n  addServerStateScenario(_serverStateScenario: ServerStateScenario) {},\n  changeServerStateScenario(_serverStateScenarioId: string) {},\n  updateServerState(_serverState: ServerState) {},\n  resetServerState() {},\n  deleteStateScenario() {},\n\n  addEndpoint(_endpoint: Endpoint) {},\n  deleteEndpoint(_endpointId: string) {},\n  changeEndpointResponseStatus(\n    _endpointId: string,\n    _status: HttpStatus | null,\n  ) {},\n  updateEndpoint(_endpoint: Endpoint) {},\n  testEndpoint(\n    _endpoint: Endpoint,\n    _urlParameters: Record<string, string>,\n    _queryString: string,\n    _requestBody: string,\n  ) {\n    return Promise.resolve(new Response(''));\n  },\n});\n\nfunction parseMessage(\n  message: string,\n): { action: ServerAction; payload: unknown } {\n  const { action, payload } = JSON.parse(message);\n\n  return { action, payload };\n}\n\nfunction getSocketUrl() {\n  if (process.env.REACT_APP_SOCKET_URL) {\n    return process.env.REACT_APP_SOCKET_URL;\n  }\n\n  return 'wss://moxy-proxy.herokuapp.com/superHash123';\n}\n\nfunction getApiUrl() {\n  if (process.env.REACT_APP_API_URL) {\n    return process.env.REACT_APP_API_URL;\n  }\n\n  return 'https://moxy-proxy.herokuapp.com';\n}\n\nconst socket = new WebSocket(getSocketUrl());\n\nfunction sendEvent(event: ClientEvent) {\n  console.log(['sendEvent'], event);\n  try {\n    socket.send(JSON.stringify(event));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction App() {\n  const [activeTab, setActiveTab] = useLocalstorage<TabKey>(\n    'activeTab',\n    'serverState',\n  );\n  const [\n    activeServerStateScenarioId,\n    setActiveServerStateScenarioId,\n  ] = useLocalstorage('activeServerStateScenarioId', 'default');\n  const [viewMode, setViewMode] = useLocalstorage<ViewMode>('viewMode', 'tabs');\n  const [serverState, setServerState] = useState(initialServerState);\n  const [serverStateScenarios, setServerStateScenarios] = useState(\n    [] as ServerStateScenario[],\n  );\n  const [serverStateInterface, setServerStateInterface] = useState('');\n  const [endpoints, setEndpoints] = useState(initialEndpoint);\n  const messageHandler = useCallback(\n    (event: ServerEvent) => {\n      const { action, payload } = event;\n      const handlers: Record<ServerAction, (payload: any) => void> = {\n        updateEndpoints(payload: Endpoint[]) {\n          setEndpoints(payload);\n        },\n        updateServerState(payload: ServerState) {\n          setServerState(payload);\n        },\n        updateServerStateInterface(payload: string) {\n          setServerStateInterface(payload);\n        },\n        updateActiveStateScenarioId(payload: string) {\n          setActiveServerStateScenarioId(payload);\n        },\n        updateServerStateScenarios(payload: ServerStateScenario[]) {\n          setServerStateScenarios(payload);\n        },\n      };\n\n      handlers[action](payload);\n    },\n    [setActiveServerStateScenarioId],\n  );\n\n  useEffect(() => {\n    socket.onopen = (event) => {\n      console.log(['WebSocket.onopen'], event);\n    };\n\n    socket.onclose = (event) => {\n      console.log(['WebSocket.onclose'], event);\n      // TODO wznawianie połączenia po utracie\n      setTimeout(() => {\n        window.location.reload();\n      }, 3000);\n    };\n\n    socket.onmessage = (event) => {\n      console.log(['WebSocket.onmessage'], JSON.parse(event.data));\n      messageHandler(parseMessage(event.data));\n    };\n\n    socket.onerror = (event) => {\n      console.error(['WebSocket.onerror'], event);\n    };\n\n    const pingInterval = setInterval(() => {\n      sendEvent({\n        action: 'ping',\n      });\n    }, 10000);\n\n    return () => {\n      clearInterval(pingInterval);\n    };\n  }, [messageHandler]);\n\n  function handleResetServerState() {\n    sendEvent({\n      action: 'resetServerState',\n    });\n  }\n\n  function handleDeleteStateScenario() {\n    sendEvent({\n      action: 'deleteStateScenario',\n      payload: activeServerStateScenarioId,\n    });\n  }\n\n  function handleAddEndpoint(endpoint: Endpoint) {\n    sendEvent({\n      action: 'addEndpoint',\n      payload: endpoint,\n    });\n  }\n\n  function handleUpdateEndpoint(endpoint: Endpoint) {\n    sendEvent({\n      action: 'updateEndpoint',\n      payload: endpoint,\n    });\n  }\n\n  function handleDeleteEndpoint(endpointId: string) {\n    sendEvent({\n      action: 'deleteEndpoint',\n      payload: endpointId,\n    });\n  }\n\n  async function handleTestEndpoint(\n    { url, method }: Endpoint,\n    urlParameters: Record<string, string>,\n    queryParams: string,\n    requestBody: string,\n  ) {\n    const parsedBody = JSON.parse(requestBody);\n    const isEmpty = method === 'get' || Object.keys(parsedBody).length === 0;\n    const body = isEmpty ? undefined : JSON.stringify(parsedBody);\n    const headers = isEmpty\n      ? undefined\n      : {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        };\n\n    function parseUrlWithParameters(\n      url: string,\n      urlParameters: Record<string, string>,\n    ) {\n      const urlParts = url.split('/').filter(Boolean);\n      const path = urlParts.reduce((acc, part) => {\n        const urlParameter = part[0] === urlDelimiter;\n\n        if (urlParameter) {\n          return `${acc}/${urlParameters[part.slice(1)]}`;\n        }\n\n        return `${acc}/${part}`;\n      }, '');\n\n      return `${getApiUrl()}${path}`;\n    }\n\n    const parsedUrl = `${parseUrlWithParameters(\n      url,\n      urlParameters,\n    )}?${queryParams}`;\n\n    console.log(['parsedUrl'], parsedUrl);\n\n    return await fetch(parsedUrl, {\n      body,\n      method,\n      headers,\n      credentials: 'include',\n    });\n  }\n\n  function handleServerStateChange(updatedServerState: ServerState) {\n    setServerState(updatedServerState);\n    sendEvent({\n      action: 'clientUpdatedServer',\n      payload: {\n        serverStateScenarioId: activeServerStateScenarioId,\n        state: updatedServerState,\n      },\n    });\n  }\n\n  function handleAddServerStateScenario(\n    serverStateScenario: ServerStateScenario,\n  ) {\n    setServerStateScenarios((scenarios) => [...scenarios, serverStateScenario]);\n    sendEvent({\n      action: 'addServerStateScenario',\n      payload: serverStateScenario,\n    });\n  }\n\n  function handleChangeServerStateScenario(serverStateScenarioId: string) {\n    sendEvent({\n      action: 'changeServerStateScenario',\n      payload: serverStateScenarioId,\n    });\n    // @ts-ignore\n    setActiveServerStateScenarioId(serverStateScenarioId);\n  }\n\n  function handleChangeEndpointResponseStatus(\n    endpointId: string,\n    status: HttpStatus | null,\n  ) {\n    sendEvent({\n      action: 'changeEndpointResponseStatus',\n      payload: {\n        endpointId,\n        status,\n      },\n    });\n  }\n\n  function handlePersistEndpoints() {\n    sendEvent({\n      action: 'persistEndpoints',\n    });\n  }\n\n  function handlePersistMockedData() {\n    sendEvent({\n      action: 'persistMockedData',\n    });\n  }\n\n  const contextValue = {\n    activeTab: activeTab as TabKey,\n    activeServerStateScenarioId,\n    endpoints,\n    serverState,\n    serverStateInterface,\n    serverStateScenarios,\n    viewMode,\n    persistEndpoints: handlePersistEndpoints,\n    persistMockedData: handlePersistMockedData,\n    changeEndpointResponseStatus: handleChangeEndpointResponseStatus,\n    addServerStateScenario: handleAddServerStateScenario,\n    deleteStateScenario: handleDeleteStateScenario,\n    changeServerStateScenario: handleChangeServerStateScenario,\n    changeViewMode: setViewMode,\n    changeActiveTab: setActiveTab,\n    updateServerState: handleServerStateChange,\n    resetServerState: handleResetServerState,\n    addEndpoint: handleAddEndpoint,\n    updateEndpoint: handleUpdateEndpoint,\n    deleteEndpoint: handleDeleteEndpoint,\n    testEndpoint: handleTestEndpoint,\n  };\n\n  return (\n    <div className=\"App\">\n      <AppStateContext.Provider value={contextValue}>\n        <Layout />\n      </AppStateContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport React, { useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { Editor } from './Editor';\n\nexport default function CodeEditor({\n  code,\n  title,\n  language = 'javascript',\n  onSave,\n}: {\n  code: string;\n  title?: string;\n  language?: string;\n  onSave: any;\n}) {\n  const [draft, setDraft] = useState(code);\n  const [editing, setEditing] = useState(false);\n  const [editorReady, setEditorReady] = useState(false);\n\n  function handleEditorReady() {\n    setEditorReady(true);\n  }\n\n  function handleSave() {\n    setEditing(false);\n    onSave(draft);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Typography variant=\"body1\">{title}</Typography>\n        {editorReady && editing ? (\n          <Button onClick={handleSave}>Done</Button>\n        ) : (\n          <Button onClick={() => setEditing(true)}>Edit</Button>\n        )}\n      </div>\n      <div>\n        {editing ? (\n          <Editor\n            autoHeight\n            code={draft}\n            language={language}\n            onReady={handleEditorReady}\n            onSave={setDraft}\n          />\n        ) : (\n          <SyntaxHighlighter language={language}>\n            {code.trim()}\n          </SyntaxHighlighter>\n        )}\n      </div>\n    </div>\n  );\n}\n","import MonacoEditor from '@monaco-editor/react';\nimport React, { MutableRefObject, useEffect, useRef } from 'react';\n\nfunction useAutoSave(\n  editorRef: MutableRefObject<(() => string) | undefined>,\n  onSave: (value: string) => void,\n) {\n  useEffect(() => {\n    // TODO make it deferrable so there is only only real request after done editing\n    const interval = setInterval(() => {\n      editorRef.current && onSave(editorRef.current());\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [editorRef, onSave]);\n}\n\nconst lineHeight = 18;\n\nexport function Editor({\n  onSave,\n  code,\n  autoHeight,\n  language,\n  onReady,\n}: {\n  code: string;\n  language: string;\n  autoHeight?: boolean;\n  onSave(value: string): void;\n  onReady?(): void;\n}) {\n  const editorRef = useRef<() => string>();\n\n  useAutoSave(editorRef, onSave);\n\n  function handleEditorDidMount(valueGetter: (() => string) | undefined) {\n    onReady && onReady();\n    editorRef.current = valueGetter;\n  }\n\n  const linesCount = code.split(/\\r\\n|\\r|\\n/).length + 3;\n  const height = autoHeight ? `${linesCount * lineHeight}px` : '500px';\n\n  return (\n    <MonacoEditor\n      editorDidMount={handleEditorDidMount}\n      height={height}\n      language={language}\n      value={code.trim()}\n      width=\"100%\"\n    />\n  );\n}\n","import { IconButton } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Endpoint } from '../../../../sharedTypes';\n\nexport default function CopyCurl({\n  endpoint,\n  queryString,\n  requestBody,\n}: {\n  endpoint: Endpoint;\n  queryString: string;\n  requestBody: string;\n}) {\n  const [open, setOpen] = useState(false);\n  const handleClick = async () => {\n    setOpen(true);\n    await navigator.clipboard.writeText(\n      `curl -i --header \"Content-Type: application/json\" --request ${endpoint.method.toLocaleUpperCase()} --data '${JSON.stringify(\n        JSON.parse(requestBody),\n      )}' ${window.location.origin}/${endpoint.url}?${queryString}`,\n    );\n  };\n  const handleClose = (event: SyntheticEvent | MouseEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Copy CURL to clipboard</Button>\n      <Snackbar\n        action={\n          <IconButton\n            aria-label=\"close\"\n            color=\"inherit\"\n            size=\"small\"\n            onClick={handleClose}\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        autoHideDuration={6000}\n        message=\"CURL copied to clipboard!\"\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n","import { TextField } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { Endpoint } from '../../../../sharedTypes';\n\nexport default function QueryParameters({\n  endpoint,\n  queryParams,\n  setQueryParams,\n}: {\n  endpoint: Endpoint;\n  queryParams: any;\n  setQueryParams: any;\n}) {\n  return (\n    <>\n      <Typography variant=\"subtitle2\">Fill query parameters</Typography>\n      <div style={{ display: 'flex' }}>\n        {endpoint.parameters.map(({ id, name, type }, index) => (\n          <>\n            <Typography\n              style={{ marginTop: 20, marginRight: 5 }}\n              variant=\"body1\"\n            >{`${index > 0 ? '& ' : ''}${name} = `}</Typography>\n            <TextField\n              label={name}\n              placeholder=\"Set query parameter value\"\n              value={queryParams[name]}\n              onChange={event => {\n                setQueryParams({\n                  ...queryParams,\n                  [name]: event.target.value,\n                });\n              }}\n            />\n          </>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { TextField } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { Endpoint } from '../../../../sharedTypes';\n\nexport const urlDelimiter = ':';\n\nexport default function UrlParameters({\n  endpoint,\n  urlParameters,\n  setUrlParameters,\n}: {\n  endpoint: Endpoint;\n  urlParameters: any;\n  setUrlParameters: any;\n}) {\n  const urlParts = endpoint.url.split('/').filter(Boolean);\n\n  return (\n    <>\n      <Typography style={{ flexGrow: 1 }} variant=\"subtitle2\">\n        Fill url parameters\n      </Typography>\n      <div style={{ display: 'flex' }}>\n        {urlParts.map(part => {\n          const urlParameter = part[0] === urlDelimiter;\n\n          if (urlParameter) {\n            const parameterName = part.slice(1);\n            const value = urlParameters[parameterName];\n\n            return (\n              <TextField\n                required\n                label={parameterName}\n                placeholder=\"Set parameter value\"\n                value={value}\n                onChange={event => {\n                  setUrlParameters({\n                    ...urlParameters,\n                    [parameterName]: event.target.value,\n                  });\n                }}\n              />\n            );\n          } else {\n            return (\n              <Typography\n                style={{ marginTop: 20, marginRight: 5 }}\n                variant=\"body1\"\n              >{`${part} /`}</Typography>\n            );\n          }\n        })}\n      </div>\n    </>\n  );\n}\n","import { IconButton, useMediaQuery } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Close } from '@material-ui/icons';\nimport React, { useContext, useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { Endpoint, EndpointParameter } from '../../../../sharedTypes';\nimport { AppStateContext } from '../../../App';\nimport CodeEditor from '../../../common/CodeEditor';\nimport CopyCurl from './CopyCurl';\nimport QueryParameters from './QueryParameters';\nimport UrlParameters from './UrlParameters';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  }),\n);\nconst emptyJsonString = `\n{}\n`;\n\nexport const urlDelimiter = ':';\n\nfunction getUrlParameters(url: string): Record<string, string> {\n  const parts = url.split('/').filter(Boolean);\n\n  return parts.reduce((acc, part) => {\n    if (part[0] === urlDelimiter) {\n      return {\n        ...acc,\n        [part.slice(1)]: '',\n      };\n    }\n\n    return acc;\n  }, {} as Record<string, string>);\n}\n\nfunction initialQueryParamsValues(\n  queryParams: EndpointParameter[],\n): Record<string, string> {\n  return queryParams.reduce(\n    (acc, queryParam) => ({\n      ...acc,\n      [queryParam.name]: '',\n    }),\n    {},\n  );\n}\n\nexport default function TestEndpoint({ endpoint }: { endpoint: Endpoint }) {\n  const [open, setOpen] = useState(false);\n  const [requestBody, setRequestBody] = useState(emptyJsonString);\n  const [showRequestBody, setShowRequestBody] = useState(false);\n  const [responseJson, setResponseJson] = useState('');\n  const theme = useTheme();\n  const classes = useStyles();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n  const { testEndpoint } = useContext(AppStateContext);\n  const [urlParameters, setUrlParameters] = useState(\n    getUrlParameters(endpoint.url),\n  );\n  const [queryParams, setQueryParams] = useState(\n    initialQueryParamsValues(endpoint.parameters),\n  );\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function parseQueryParams(params: typeof queryParams) {\n    return Object.entries(params).reduce(\n      (acc, [name, value]) => `${acc}&${name}=${value}`,\n      '',\n    );\n  }\n\n  async function handleTest() {\n    const queryString = parseQueryParams(queryParams);\n    const response = await testEndpoint(\n      endpoint,\n      urlParameters,\n      queryString,\n      requestBody,\n    );\n\n    if (response.status < 300) {\n      try {\n        const data = await response.json();\n\n        setResponseJson(JSON.stringify(data));\n      } catch (e) {\n        setResponseJson('');\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>Test endpoint</Button>\n      <Dialog\n        closeAfterTransition\n        aria-labelledby=\"max-width-dialog-title\"\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle\n          disableTypography\n          id=\"max-width-dialog-title\"\n          style={{ minWidth: 500 }}\n        >\n          <Typography\n            style={{ marginRight: 40 }}\n            variant=\"h6\"\n          >{`Test endpoint ${endpoint.method}:${endpoint.url}`}</Typography>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={handleClose}\n          >\n            <Close />\n          </IconButton>\n        </DialogTitle>\n        {Object.keys(urlParameters).length > 0 && (\n          <DialogContent>\n            <UrlParameters\n              endpoint={endpoint}\n              setUrlParameters={setUrlParameters}\n              urlParameters={urlParameters}\n            />\n          </DialogContent>\n        )}\n        {endpoint.parameters.length > 0 && (\n          <DialogContent>\n            <QueryParameters\n              endpoint={endpoint}\n              queryParams={queryParams}\n              setQueryParams={setQueryParams}\n            />\n          </DialogContent>\n        )}\n        <DialogContent>\n          {showRequestBody ? (\n            <CodeEditor\n              code={requestBody}\n              language=\"json\"\n              title=\"Request body\"\n              onSave={setRequestBody}\n            />\n          ) : (\n            <Button onClick={() => setShowRequestBody(true)}>\n              Add request body\n            </Button>\n          )}\n        </DialogContent>\n        <DialogContent>\n          {responseJson && (\n            <>\n              <Typography variant=\"body1\">Response</Typography>\n              <SyntaxHighlighter language=\"json\">\n                {JSON.stringify(JSON.parse(responseJson), null, 2)}\n              </SyntaxHighlighter>\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <CopyCurl\n            endpoint={endpoint}\n            queryString={parseQueryParams(queryParams)}\n            requestBody={requestBody}\n          />\n          <Button onClick={handleTest}>Test</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"],"sourceRoot":""}