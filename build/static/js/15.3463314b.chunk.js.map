{"version":3,"sources":["modules/endpoints/add-endpoint/steps/ParametersStep.tsx","modules/endpoints/add-endpoint/steps/RequestMethodStep.tsx","modules/endpoints/add-endpoint/steps/ResponseStep.tsx","modules/endpoints/add-endpoint/steps/UpdateServerStateStep.tsx","modules/endpoints/add-endpoint/steps/UrlPatternStep.tsx","modules/endpoints/add-endpoint/AddEndpointStepper.tsx","modules/endpoints/add-endpoint/AddEndpoint.tsx","common/httpStatuses.ts","modules/endpoints/EndpointCode.tsx","modules/endpoints/Endpoint.tsx","modules/endpoints/EndpointGroup.tsx","modules/endpoints/Endpoints.tsx"],"names":["parametersTypes","text","value","ParametersStep","parameters","onParametersChange","addParameter","map","id","name","type","key","FormControl","style","margin","minWidth","TextField","label","onChange","event","target","InputLabel","Select","labelId","MenuItem","Button","onClick","length","toString","RequestMethodStep","method","onMethodChange","ButtonGroup","aria-label","color","variant","undefined","ResponseStep","code","CodeEditor","onSave","UpdateServerStateStep","UrlPatternStep","url","onUrlChange","autoFocus","fullWidth","sanitized","sanitizeUrl","useStyles","makeStyles","theme","createStyles","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","AddEndpointStepper","onDone","classes","useState","activeStep","setActiveStep","Date","now","responseStatus","responseCode","serverStateUpdateCode","endpoint","setEndpoint","steps","handleNext","prevActiveStep","handleBack","Stepper","orientation","index","Step","StepLabel","StepContent","Typography","step","parameter","produce","draft","parameterIndex","findIndex","updateParameters","getStepContent","className","disabled","DialogContent","DialogActions","Paper","square","elevation","closeButton","position","right","top","palette","grey","AddEndpoint","open","setOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","addEndpoint","useContext","AppStateContext","handleClose","Dialog","closeAfterTransition","aria-labelledby","maxWidth","onClose","DialogTitle","disableTypography","IconButton","Close","httpStatuses","100","101","102","200","201","202","203","204","205","206","207","208","226","300","301","302","303","304","305","307","308","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","422","423","424","426","428","429","431","444","451","499","500","501","502","503","504","505","506","507","508","510","511","599","EndpointCode","onResponseCodeSave","onServerStateUpdateCodeSave","ExpansionPanelDetails","title","httpStatusOptions","Object","keys","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","Endpoint","updateEndpoint","deleteEndpoint","changeEndpointResponseStatus","display","justifyContent","alignContent","alignItems","TestEndpoint","Autocomplete","getOptionLabel","option","options","renderInput","params","width","_event","flexDirection","language","JSON","stringify","reduce","acc","EndpointGroup","endpoints","expandedEndpoint","setExpandedEndpoint","find","endpointsMethods","Tabs","centered","indicatorColor","textColor","newValue","Tab","toUpperCase","root","emptyMessageWrapper","ExpansionPanel","withStyles","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","backgroundColor","minHeight","content","MuiExpansionPanelSummary","Endpoints","groupedEndpoints","push","handleChange","panel","newExpanded","entries"],"mappings":"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","file":"static/js/15.3463314b.chunk.js","sourcesContent":["import { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport React from 'react';\nimport { EndpointParameter } from '../../../../../sharedTypes';\n\nexport const parametersTypes = [\n  { text: 'String', value: 'string' },\n  { text: 'Number', value: 'number' },\n  { text: 'Boolean', value: 'boolean' },\n  { text: 'String array', value: 'stringArray' },\n  { text: 'Number array', value: 'numberArray' },\n  { text: 'Object', value: 'object' },\n] as const;\n\nexport default function ParametersStep({\n  parameters,\n  onParametersChange,\n  addParameter,\n}: {\n  parameters: EndpointParameter[];\n\n  onParametersChange(parameter: EndpointParameter): void;\n  addParameter(parameter: EndpointParameter): void;\n}) {\n  function handleAddParameter() {\n    addParameter({\n      id: (parameters.length + 1).toString(),\n      name: '',\n      type: '',\n    });\n  }\n\n  return (\n    <>\n      {parameters.map(({ id, name, type }) => (\n        <div key={id}>\n          <FormControl\n            style={{\n              margin: 8,\n              minWidth: 120,\n            }}\n          >\n            <TextField\n              label=\"Parameter name\"\n              value={name}\n              onChange={event =>\n                onParametersChange({ name: event.target.value, type, id })\n              }\n            />\n          </FormControl>\n          <FormControl\n            style={{\n              margin: 8,\n              minWidth: 160,\n            }}\n          >\n            <InputLabel id=\"parameter-typ-label\">Parameter type</InputLabel>\n            <Select\n              id=\"parameter-type-select\"\n              labelId=\"parameter-typ-label\"\n              value={type}\n              onChange={event =>\n                onParametersChange({\n                  id,\n                  type: event.target.value as string,\n                  name,\n                })\n              }\n            >\n              {parametersTypes.map(({ text, value }) => (\n                <MenuItem key={value} value={value}>\n                  {text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n      ))}\n      <div>\n        <Button onClick={handleAddParameter}>Add parameter</Button>\n      </div>\n    </>\n  );\n}\n","import { ButtonGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport { Method } from '../../../../../sharedTypes';\n\nexport default function RequestMethodStep({\n  method,\n  onMethodChange,\n}: {\n  method: Method;\n  onMethodChange: (value: Method) => void;\n}) {\n  return (\n    <ButtonGroup\n      aria-label=\"text primary button group\"\n      color=\"primary\"\n      variant=\"text\"\n    >\n      <Button\n        variant={method === 'get' ? 'outlined' : undefined}\n        onClick={() => onMethodChange('get')}\n      >\n        Get\n      </Button>\n      <Button\n        variant={method === 'post' ? 'outlined' : undefined}\n        onClick={() => onMethodChange('post')}\n      >\n        Post\n      </Button>\n      <Button\n        variant={method === 'put' ? 'outlined' : undefined}\n        onClick={() => onMethodChange('put')}\n      >\n        Put\n      </Button>\n      <Button\n        variant={method === 'patch' ? 'outlined' : undefined}\n        onClick={() => onMethodChange('patch')}\n      >\n        Patch\n      </Button>\n      <Button\n        variant={method === 'delete' ? 'outlined' : undefined}\n        onClick={() => onMethodChange('delete')}\n      >\n        Delete\n      </Button>\n    </ButtonGroup>\n  );\n}\n","import React from 'react';\nimport CodeEditor from '../../../../common/CodeEditor';\n\nexport const initialResponseCode = `\nfunction requestResponse(state, request) {\n  return state;\n}\n`;\n\nexport default function ResponseStep({\n  code,\n  onChange,\n}: {\n  code: string;\n  onChange: (code: string) => void;\n}) {\n  return <CodeEditor code={code} onSave={onChange} />;\n}\n","import React from 'react';\nimport CodeEditor from '../../../../common/CodeEditor';\n\nexport const initialServerStateUpdateCode = `\nfunction serverUpdate(request) {\n  return function stateUpdate(state) {\n    state.modified = true;\n  };\n}\n`;\n\nexport default function UpdateServerStateStep({\n  code,\n  onChange,\n}: {\n  code: string;\n  onChange: (code: string) => void;\n}) {\n  return <CodeEditor code={code} onSave={onChange} />;\n}\n","import { TextField } from '@material-ui/core';\nimport React, { ChangeEvent } from 'react';\n\nconst urlBeginChar = '/';\n\nfunction sanitizeUrl(url: string): string {\n  let sanitized = url;\n  const firstChar = url[0];\n\n  if (firstChar !== urlBeginChar) {\n    sanitized = `${urlBeginChar}${sanitized}`;\n  }\n\n  return sanitized;\n}\n\nexport default function UrlPatternStep({\n  url,\n  onUrlChange,\n}: {\n  url: string;\n  onUrlChange: (value: string) => void;\n}) {\n  function handleUrlChange(event: ChangeEvent<HTMLInputElement>) {\n    const value = sanitizeUrl(event.target.value);\n\n    onUrlChange(value);\n  }\n\n  return (\n    <TextField\n      autoFocus\n      fullWidth\n      id=\"name\"\n      label=\"URL pattern\"\n      margin=\"dense\"\n      value={url}\n      onChange={handleUrlChange}\n    />\n  );\n}\n","import { DialogActions } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Paper from '@material-ui/core/Paper';\nimport Step from '@material-ui/core/Step';\nimport StepContent from '@material-ui/core/StepContent';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Stepper from '@material-ui/core/Stepper';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport produce from 'immer';\nimport React, { useState } from 'react';\nimport { Endpoint, EndpointParameter } from '../../../../sharedTypes';\nimport ParametersStep from './steps/ParametersStep';\nimport RequestMethodStep from './steps/RequestMethodStep';\nimport ResponseStep, { initialResponseCode } from './steps/ResponseStep';\nimport UpdateServerStateStep, {\n  initialServerStateUpdateCode,\n} from './steps/UpdateServerStateStep';\nimport UrlPatternStep from './steps/UrlPatternStep';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\nfunction getSteps() {\n  return [\n    'URL pattern',\n    'Select request type',\n    'Add parameters',\n    'Define response',\n    'Update server state',\n  ];\n}\n\nexport default function AddEndpointStepper({ onDone }: { onDone: any }) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [endpoint, setEndpoint] = useState<Endpoint>({\n    id: Date.now().toString(),\n    url: '/',\n    method: 'get',\n    parameters: [],\n    responseStatus: null,\n    responseCode: initialResponseCode,\n    serverStateUpdateCode: initialServerStateUpdateCode,\n  });\n\n  function getStepContent(step: number) {\n    switch (step) {\n      case 0: {\n        return (\n          <UrlPatternStep\n            url={endpoint.url}\n            onUrlChange={(url: string) =>\n              setEndpoint(endpoint => ({\n                ...endpoint,\n                url,\n              }))\n            }\n          />\n        );\n      }\n      case 1: {\n        return (\n          <RequestMethodStep\n            method={endpoint.method}\n            onMethodChange={method =>\n              setEndpoint(endpoint => ({\n                ...endpoint,\n                method,\n              }))\n            }\n          />\n        );\n      }\n      case 2: {\n        return (\n          <ParametersStep\n            addParameter={parameter => {\n              setEndpoint(endpoint => ({\n                ...endpoint,\n                parameters: [...endpoint.parameters, parameter],\n              }));\n            }}\n            parameters={endpoint.parameters}\n            onParametersChange={parameter => {\n              function updateParameters(\n                parameters: EndpointParameter[],\n                parameter: EndpointParameter,\n              ) {\n                return produce(parameters, draft => {\n                  const parameterIndex = parameters.findIndex(\n                    ({ id }) => id === parameter.id,\n                  );\n\n                  if (!(parameterIndex < 0)) {\n                    draft[parameterIndex] = parameter;\n                  }\n                });\n              }\n\n              const parameters = updateParameters(\n                endpoint.parameters,\n                parameter,\n              );\n\n              setEndpoint(endpoint => ({\n                ...endpoint,\n                parameters,\n              }));\n            }}\n          />\n        );\n      }\n      case 3: {\n        return (\n          <ResponseStep\n            code={endpoint.responseCode}\n            onChange={responseCode =>\n              setEndpoint(endpoint => ({\n                ...endpoint,\n                responseCode,\n              }))\n            }\n          />\n        );\n      }\n      case 4: {\n        return (\n          <UpdateServerStateStep\n            code={endpoint.serverStateUpdateCode}\n            onChange={serverStateUpdateCode =>\n              setEndpoint(endpoint => ({\n                ...endpoint,\n                serverStateUpdateCode,\n              }))\n            }\n          />\n        );\n      }\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  const steps = getSteps();\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n  const handleSubmit = () => {\n    onDone(endpoint);\n  };\n\n  return (\n    <>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                <div>\n                  <Button\n                    className={classes.button}\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    className={classes.button}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={handleNext}\n                  >\n                    Next\n                  </Button>\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <>\n          <DialogContent>\n            <Typography>Endpoint ready to submit</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Paper square className={classes.resetContainer} elevation={0}>\n              <Button className={classes.button} onClick={handleBack}>\n                Back\n              </Button>\n              <Button\n                className={classes.button}\n                color=\"primary\"\n                onClick={handleSubmit}\n              >\n                Submit\n              </Button>\n            </Paper>\n          </DialogActions>\n        </>\n      )}\n    </>\n  );\n}\n","import { IconButton, Typography, useMediaQuery } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n} from '@material-ui/core/styles';\nimport { Close } from '@material-ui/icons';\nimport React, { useContext, useState } from 'react';\nimport { Endpoint } from '../../../../sharedTypes';\nimport { AppStateContext } from '../../../App';\nimport AddEndpointStepper from './AddEndpointStepper';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  }),\n);\n\nexport default function AddEndpoint() {\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n  const { addEndpoint } = useContext(AppStateContext);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleDone = (endpoint: Endpoint) => {\n    setOpen(false);\n    addEndpoint(endpoint);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>Add endpoint</Button>\n      <Dialog\n        closeAfterTransition\n        aria-labelledby=\"max-width-dialog-title\"\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle\n          disableTypography\n          id=\"max-width-dialog-title\"\n          style={{ minWidth: 500 }}\n        >\n          <Typography variant=\"h6\">Add endpoint</Typography>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={handleClose}\n          >\n            <Close />\n          </IconButton>\n        </DialogTitle>\n        <AddEndpointStepper onDone={handleDone} />\n      </Dialog>\n    </div>\n  );\n}\n","import { HttpStatus } from '../../sharedTypes';\n\nexport const httpStatuses: Record<HttpStatus, string> = {\n  //  1: 'Informational',\n  100: 'Continue',\n  101: 'Switching Protocols',\n  102: 'Processing',\n  //  2: 'Success',\n  200: 'OK',\n  201: 'Created',\n  202: 'Accepted',\n  203: 'Non-authoritative Information',\n  204: 'No Content',\n  205: 'Reset Content',\n  206: 'Partial Content',\n  207: 'Multi-Status',\n  208: 'Already Reported',\n  226: 'IM Used',\n  //  3: 'Redirection',\n  300: 'Multiple Choices',\n  301: 'Moved Permanently',\n  302: 'Found',\n  303: 'See Other',\n  304: 'Not Modified',\n  305: 'Use Proxy',\n  307: 'Temporary Redirect',\n  308: 'Permanent Redirect',\n  //  4: 'Client Error',\n  400: 'Bad Request',\n  401: 'Unauthorized',\n  402: 'Payment Required',\n  403: 'Forbidden',\n  404: 'Not Found',\n  405: 'Method Not Allowed',\n  406: 'Not Acceptable',\n  407: 'Proxy Authentication Required',\n  408: 'Request Timeout',\n  409: 'Conflict',\n  410: 'Gone',\n  411: 'Length Required',\n  412: 'Precondition Failed',\n  413: 'Payload Too Large',\n  414: 'Request-URI Too Long',\n  415: 'Unsupported Media Type',\n  416: 'Requested Range Not Satisfiable',\n  417: 'Expectation Failed',\n  418: 'I\"m a teapot',\n  421: 'Misdirected Request',\n  422: 'Unprocessable Entity',\n  423: 'Locked',\n  424: 'Failed Dependency',\n  426: 'Upgrade Required',\n  428: 'Precondition Required',\n  429: 'Too Many Requests',\n  431: 'Request Header Fields Too Large',\n  444: 'Connection Closed Without Response',\n  451: 'Unavailable For Legal Reasons',\n  499: 'Client Closed Request',\n  //  5: 'Server Error',\n  500: 'Internal Server Error',\n  501: 'Not Implemented',\n  502: 'Bad Gateway',\n  503: 'Service Unavailable',\n  504: 'Gateway Timeout',\n  505: 'HTTP Version Not Supported',\n  506: 'Variant Also Negotiates',\n  507: 'Insufficient Storage',\n  508: 'Loop Detected',\n  510: 'Not Extended',\n  511: 'Network Authentication Required',\n  599: 'Network Connect Timeout Error',\n} as const;\n","import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport React from 'react';\nimport CodeEditor from '../../common/CodeEditor';\n\nexport default function EndpointCode({\n  responseCode,\n  serverStateUpdateCode,\n  onResponseCodeSave,\n  onServerStateUpdateCodeSave,\n}: {\n  responseCode: string;\n  serverStateUpdateCode: string;\n  onResponseCodeSave(_code: string): void;\n  onServerStateUpdateCodeSave(_code: string): void;\n}) {\n  return (\n    <>\n      <ExpansionPanelDetails>\n        <CodeEditor\n          code={responseCode}\n          title=\"Response\"\n          onSave={onResponseCodeSave}\n        />\n      </ExpansionPanelDetails>\n      <ExpansionPanelDetails>\n        <CodeEditor\n          code={serverStateUpdateCode}\n          title=\"Server update\"\n          onSave={onServerStateUpdateCodeSave}\n        />\n      </ExpansionPanelDetails>\n    </>\n  );\n}\n","import { Button } from '@material-ui/core';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React, { useContext } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport {\n  Endpoint as EndpointInterface,\n  HttpStatus,\n  HttpStatusOption,\n} from '../../../sharedTypes';\nimport { AppStateContext } from '../../App';\nimport { httpStatuses } from '../../common/httpStatuses';\nimport TestEndpoint from './test-endpoint/TestEndpoint';\nimport EndpointCode from './EndpointCode';\n\nconst httpStatusOptions: HttpStatusOption[] = Object.keys(httpStatuses).map(\n  key => ({\n    value: (key as unknown) as HttpStatus,\n    text: httpStatuses[(key as unknown) as HttpStatus],\n  }),\n);\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }),\n);\n\nexport default function Endpoint({\n  endpoint,\n}: {\n  endpoint: EndpointInterface;\n}) {\n  const classes = useStyles();\n  const {\n    updateEndpoint,\n    deleteEndpoint,\n    changeEndpointResponseStatus,\n  } = useContext(AppStateContext);\n\n  return (\n    <>\n      <ExpansionPanelDetails\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignContent: 'center',\n        }}\n      >\n        <div style={{ display: 'flex', alignItems: 'center', marginTop: 12 }}>\n          <Button onClick={() => deleteEndpoint(endpoint.id)}>Delete</Button>\n          <TestEndpoint endpoint={endpoint} />\n        </div>\n        <div>\n          <Autocomplete\n            getOptionLabel={option => `${option.value} ${option.text}`}\n            options={httpStatusOptions}\n            renderInput={params => (\n              <TextField\n                {...params}\n                fullWidth\n                label=\"Select server suspense status\"\n                variant=\"standard\"\n              />\n            )}\n            style={{ width: 300 }}\n            value={\n              {\n                text: endpoint.responseStatus\n                  ? httpStatuses[endpoint.responseStatus]\n                  : 'default',\n                value: endpoint.responseStatus || 200,\n              } as any\n            }\n            onChange={\n              ((_event: any, option: HttpStatusOption) =>\n                changeEndpointResponseStatus(endpoint.id, option.value)) as any\n            }\n          />\n        </div>\n      </ExpansionPanelDetails>\n      <EndpointCode\n        responseCode={endpoint.responseCode}\n        serverStateUpdateCode={endpoint.serverStateUpdateCode}\n        onResponseCodeSave={(code: string) => {\n          updateEndpoint({\n            id: endpoint.id,\n            url: endpoint.url,\n            method: endpoint.method,\n            responseStatus: endpoint.responseStatus,\n            responseCode: code,\n            serverStateUpdateCode: endpoint.serverStateUpdateCode,\n            parameters: endpoint.parameters,\n          });\n        }}\n        onServerStateUpdateCodeSave={(code: string) => {\n          updateEndpoint({\n            id: endpoint.id,\n            url: endpoint.url,\n            method: endpoint.method,\n            responseStatus: endpoint.responseStatus,\n            responseCode: endpoint.responseCode,\n            serverStateUpdateCode: code,\n            parameters: endpoint.parameters,\n          });\n        }}\n      />\n      <ExpansionPanelDetails\n        style={{ display: 'flex', flexDirection: 'column' }}\n      >\n        {endpoint.parameters.length > 0 && (\n          <>\n            <Typography\n              className={classes.heading}\n              style={{ marginBottom: 16 }}\n            >\n              Parameters\n            </Typography>\n            <SyntaxHighlighter language=\"json\">\n              {JSON.stringify(\n                endpoint.parameters.reduce(\n                  (acc, { name, type }) => ({ ...acc, [name]: type }),\n                  {},\n                ),\n                null,\n                2,\n              )}\n            </SyntaxHighlighter>\n          </>\n        )}\n      </ExpansionPanelDetails>\n    </>\n  );\n}\n","import { Tab } from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs';\nimport React, { ChangeEvent, useState } from 'react';\nimport { Endpoint as EndpointInterface } from '../../../sharedTypes';\nimport Endpoint from './Endpoint';\n\nexport default function EndpointGroup({\n  endpoints,\n}: {\n  endpoints: EndpointInterface[];\n}) {\n  const [expandedEndpoint, setExpandedEndpoint] = useState<string>(\n    endpoints[0].method,\n  );\n\n  function handleActiveTabChange(event: ChangeEvent<{}>, newValue: string) {\n    setExpandedEndpoint(newValue);\n  }\n\n  const endpoint = endpoints.find(({ method }) => method === expandedEndpoint);\n  const endpointsMethods = endpoints.map(({ method }) => method);\n\n  return (\n    <>\n      <Tabs\n        centered\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        value={expandedEndpoint}\n        onChange={handleActiveTabChange}\n      >\n        {endpointsMethods.map(method => (\n          <Tab key={method} label={method.toUpperCase()} value={method} />\n        ))}\n      </Tabs>\n      {endpoint && <Endpoint endpoint={endpoint} />}\n    </>\n  );\n}\n","import { Paper } from '@material-ui/core';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport produce from 'immer';\nimport React, { ChangeEvent, useContext, useState } from 'react';\nimport { Endpoint as EndpointInterface } from '../../../sharedTypes';\nimport { AppStateContext } from '../../App';\nimport AddEndpoint from './add-endpoint/AddEndpoint';\nimport Endpoint from './Endpoint';\nimport EndpointGroup from './EndpointGroup';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  emptyMessageWrapper: {\n    margin: 8,\n  },\n});\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nexport default function Endpoints() {\n  const classes = useStyles();\n  const { endpoints } = useContext(AppStateContext);\n  const groupedEndpoints = endpoints.reduce((acc, endpoint) => {\n    return produce(acc, (draft) => {\n      if (draft[endpoint.url]) {\n        draft[endpoint.url].push(endpoint);\n      } else {\n        draft[endpoint.url] = [endpoint];\n      }\n    });\n  }, {} as Record<string, EndpointInterface[]>);\n  const [expandedEndpoint, setExpandedEndpoint] = useState<string | false>(\n    false,\n  );\n  const handleChange = (panel: string) => (\n    event: ChangeEvent<{}>,\n    newExpanded: boolean,\n  ) => {\n    setExpandedEndpoint(newExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Typography style={{ margin: 8 }} variant=\"h5\">\n          Endpoints\n        </Typography>\n        <div style={{ display: 'flex' }}>\n          <AddEndpoint />\n        </div>\n      </div>\n      <Paper>\n        {endpoints.length === 0 && (\n          <>\n            <br />\n            <Typography\n              className={classes.emptyMessageWrapper}\n              variant=\"caption\"\n            >\n              No endpoint defined.\n            </Typography>\n            <AddEndpoint />\n          </>\n        )}\n        {Object.entries(groupedEndpoints).map(([url, endpoints]) => {\n          if (endpoints.length > 1) {\n            return (\n              <ExpansionPanel\n                square\n                expanded={expandedEndpoint === url}\n                key={url}\n                onChange={handleChange(url)}\n              >\n                <ExpansionPanelSummary>\n                  <Typography>{`Group URL: ${url}`}</Typography>\n                </ExpansionPanelSummary>\n                <EndpointGroup endpoints={endpoints} />\n              </ExpansionPanel>\n            );\n          }\n\n          return (\n            <ExpansionPanel\n              square\n              expanded={expandedEndpoint === url}\n              key={url}\n              onChange={handleChange(url)}\n            >\n              <ExpansionPanelSummary>\n                <Typography>{`${endpoints[0].method.toUpperCase()}: ${url}`}</Typography>\n              </ExpansionPanelSummary>\n              <Endpoint endpoint={endpoints[0]} />\n            </ExpansionPanel>\n          );\n        })}\n      </Paper>\n    </div>\n  );\n}\n"],"sourceRoot":""}